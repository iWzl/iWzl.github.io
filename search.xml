<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Maven-XML-Details</title>
    <url>/2020/11/13/Maven-XML-Details/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Java Microbenchmark Harness微基准测试陷阱</title>
    <url>/2020/07/09/Java-Microbenchmark-Harness-Test-Trap/</url>
    <content><![CDATA[<blockquote>
<p><strong>天下之事，闻者不如见者知之为详，见者不如居者知之为尽。——宋-陆游</strong></p>
<p><strong>你要知道梨子的滋味，就要亲口尝一下。——毛泽东</strong></p>
</blockquote>
<p>俗话说，没有实践就没有发言权，自己实践才能知之为尽，Benchmark 为应用提供了数据支持，是评价和比较方法好坏的基准，Benchmark 的准确性，多样性便显得尤为重要。JMH为Java方法的基准水平提供了很好的量化标准，也为剖析系统性能和技术选型提供的更为有效切可靠的实现手段。</p>
<p>以下记录在使用Java Microbenchmark Harness做微基准测试容易遇见的误区和相关陷阱，便于之后的查找和说明。</p>
<a id="more"></a>

<h2 id="代码预热"><a href="#代码预热" class="headerlink" title="代码预热"></a>代码预热</h2><blockquote>
<p><strong>Warmup = waiting for the transient responses to settle down</strong></p>
</blockquote>
<p>随着JVM虚拟机的优化，JIT的存在，代码的执行往往前期执行结果没有后期的执行结果好。 <code>Benchmark</code> 产生更可靠的结果的原因是，它只度量稳定状态下<code>方法任务</code>的执行时间，而不理会最初的性能。大多数 Java 实现具有复杂的性能生命周期。一般来说，最初的性能往往相当低，然后性能显著提高（常常出现几次性能跃升），直到到达稳定状态。</p>
<h3 id="类装载"><a href="#类装载" class="headerlink" title="类装载"></a>类装载</h3><p>JVM 通常只在类的第一次使用类时装载它们。所以,方法任务的第一次执行时间包含装载它使用的所有类的时间（如果这些类还没有装载的话）。因为类装载往往涉及磁盘 I/O、解析和检验，这会显著增加<code>方法任务</code>的第一次执行时间。<strong>常常</strong>可以通过多次执行<code>方法任务</code>来消除这种影响。</p>
<blockquote>
<p>PS:  <strong>常常</strong>而不是<strong>总是</strong>，这是因为 <code>方法任务</code> 可能具有复杂的分支行为，这可能导致它在任何给定的执行过程中并不使用所有可能用到的类。幸运的是，如果执行任务足够多次，就可能经历所有分支，因此很快就会装载所有相关类）。</p>
</blockquote>
<p>如果使用定制的类装载器，就有另一个问题：JVM 可能认为一些类已经成了垃圾，因此决定卸载它。这不太可能严重影响性能，但是仍然会使基准测试结果产生偏差。</p>
<h3 id="混合模式"><a href="#混合模式" class="headerlink" title="混合模式"></a>混合模式</h3><p>在执行即时（Just-in-time，JIT）编译之前，现代的 JVM 通常会运行代码一段时间（常常是纯解释式运行），从而收集剖析信息。这对基准测试的影响在于，任务可能需要执行许多次，才能达到稳定状态。</p>
<p>一般来说对稳定状态下的基准测试至少需要以下步骤：</p>
<ol>
<li>执行 <code>方法任务</code> 一次，以便装载所有类。</li>
<li>执行 <code>方法任务</code> 足够多次，以确保出现稳定状态的执行数据。</li>
</ol>
<h2 id="陷阱一-死码消除"><a href="#陷阱一-死码消除" class="headerlink" title="陷阱一: 死码消除"></a>陷阱一: 死码消除</h2><p><a href="[https://zh.wikipedia.org/zh-cn/%E6%AD%BB%E7%A2%BC%E5%88%AA%E9%99%A4](https://zh.wikipedia.org/zh-cn/死碼刪除)">死码消除</a>(Dead code elimination）是一种编译最优化技术,在某些情况下，编译器可以判断出某些代码根本不影响输出，所以编译器会消除这些代码,例如注释的代码，不可达的代码块，可达但不被使用的代码，会被判断为死码而在Javac的时候被消除。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ErrorBenchmark</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> PI = Math.PI;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Benchmark</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">benchmarkNothing</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 19873732.412 ± 6783114.266  ops/ms</span></span><br><span class="line">        <span class="comment">//do nothing </span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Benchmark</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">benchmarkWrong</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">//  20988076.131 ± 7282548.202  ops/ms</span></span><br><span class="line">        Math.log(PI);  <span class="comment">// DCE 会被判断为死码而被消除</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Benchmark</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">benchmarkRight</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="comment">// 306740.041 ±   52692.696  ops/ms</span></span><br><span class="line">        <span class="keyword">return</span> Math.log(PI);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在做测试时，需要注意方法会不会有死码的存在，否者可能会带来一些不合理的测试结果和意外。对于会被判断为死码但又需要进行执行测试方法来说，可以想办法去除孤立的方法执行，例如增加方法返回值，或者使用JMH的提供的API<strong>Blackhole</strong>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Benchmark</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">benchmarkRight</span><span class="params">(Blackhole bh)</span> </span>&#123;</span><br><span class="line">    bh.consume(Math.log(PI));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="陷阱二：常量折叠与常量传播"><a href="#陷阱二：常量折叠与常量传播" class="headerlink" title="陷阱二：常量折叠与常量传播"></a>陷阱二：常量折叠与常量传播</h2><p><a href="[https://zh.wikipedia.org/wiki/%E5%B8%B8%E6%95%B8%E6%8A%98%E7%96%8A#%E5%B8%B8%E6%95%B8%E5%82%B3%E6%92%AD](https://zh.wikipedia.org/wiki/常數折疊#常數傳播)">常数折叠</a>（Constant folding）以及常数传播（constant propagation）都是<a href="https://zh.wikipedia.org/w/index.php?title=編譯器最佳化&action=edit&redlink=1" target="_blank" rel="noopener">编译器最佳化</a>技术。是一个在编译时期简化常数的一个过程。常数在表示式中仅仅代表一个简单的数值，就算一个变数从未被修改也可作为常数，或者直接将一个变数被明确地被标注为常数。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">long</span> number = <span class="number">2</span> * <span class="number">600</span> * <span class="number">200</span>;</span><br></pre></td></tr></table></figure>

<p>多数的现代编译器不会真的产生两个乘法的指令再将结果储存下来，取而代之的，他们会辨识出语句的结构，并在编译时期将数值直接计算出来。常数折叠的时机取决于编译器，有的在编译前期完成，有的在较后期进行。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">double</span> x = Math.PI;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 编译器会对 final 变量特殊处理 </span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">double</span> wrongX = Math.PI;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Benchmark</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">baseline</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 2.220 ± 0.352 ns/op</span></span><br><span class="line">    <span class="keyword">return</span> Math.PI;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Benchmark</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">measureWrong_1</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    <span class="comment">// 2.220 ± 0.352 ns/op</span></span><br><span class="line">    <span class="comment">// 错误，结果可以被预测，会发生常量折叠</span></span><br><span class="line">    <span class="keyword">return</span> Math.log(Math.PI);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Benchmark</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">measureWrong_2</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    <span class="comment">// 2.220 ± 0.352 ns/op</span></span><br><span class="line">    <span class="comment">// 错误，结果可以被预测，会发生常量折叠</span></span><br><span class="line">    <span class="keyword">return</span> Math.log(wrongX);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Benchmark</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">measureRight</span><span class="params">()</span> </span>&#123; </span><br><span class="line">    <span class="comment">// 22.590 ± 2.636  ns/op</span></span><br><span class="line">    <span class="keyword">return</span> Math.log(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>由于发生了常量折叠，相同实现下的执行销量完全不同，这个测试在一定程度上说明了final的定义对于方法执行结果的影响。</p>
<p>此外<strong>常数传播 (</strong>Constant propagation<strong>)</strong> 是一个替代表示式中已知常数的过程，也是在编译时期进行，包含前述所定义，内建函数也适用于常数。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">520</span>;</span><br><span class="line"><span class="keyword">int</span> y = <span class="number">260</span> - <span class="number">520</span> / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">return</span> y * (<span class="number">1314</span> / x + <span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<p>传播可以理解变量的替换，如果进行持续传播，上式则可写成如下</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> x = <span class="number">14</span>;</span><br><span class="line"><span class="keyword">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<h2 id="陷阱三：不要在测试中写循环"><a href="#陷阱三：不要在测试中写循环" class="headerlink" title="陷阱三：不要在测试中写循环"></a>陷阱三：不要在测试中写循环</h2><h2 id="为什么要使用JMH"><a href="#为什么要使用JMH" class="headerlink" title="为什么要使用JMH"></a>为什么要使用JMH</h2><p>对于传统的接口调用测试，可能会使用以下的方式测试</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">long</span> startTime = System.currentTimeMillis();</span><br><span class="line">benchmarkTestMethod();</span><br><span class="line">System.out.println(System.currentTimeMillis()-startTime);</span><br></pre></td></tr></table></figure>

<p>而JMH则使用</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Benchmark</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">benchmarkTestMethod</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="comment">// do </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="参考和引用"><a href="#参考和引用" class="headerlink" title="参考和引用"></a>参考和引用</h2><ul>
<li><a href="https://www.ibm.com/developerworks/cn/java/j-benchmark1.html" target="_blank" rel="noopener">IBM Developer Java 代码基准测试的问题</a></li>
<li><a href="https://www.cnkirito.moe/java-jmh/" target="_blank" rel="noopener">JAVA 拾遗 — JMH 与 8 个测试陷阱</a></li>
</ul>
]]></content>
      <categories>
        <category>系统调优</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>基准测试</tag>
        <tag>系统调优</tag>
        <tag>误区和陷阱</tag>
        <tag>JMH</tag>
      </tags>
  </entry>
  <entry>
    <title>现代架构下的即时通讯的实现设计</title>
    <url>/2020/07/07/Instant-Messaging-System-Design/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">查看内容,请输入密码</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="5b399cb19b2223a7a234e305c6a313ed4db47217871ba7558ad528234b1780d3">217eb0e2694620ddc0df9ef4c08680f4c1766dfda1eefeee30d7772c817297c6ede2a2f38fef357ac637f0af5dc323e2c0223549d265a78d0b73596631fb3f855dd0429b3e4ccf2fa14f75adcd814da530f300a6295116e5b8aa44d3c59964235ea0be00fb8cbfbdda476224f703e012</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>系统实现设计</category>
      </categories>
      <tags>
        <tag>系统实现设计</tag>
        <tag>即时通讯</tag>
      </tags>
  </entry>
  <entry>
    <title>ElasticSearch/Kibana/Logstash的搭建安装和部署</title>
    <url>/2020/07/07/ES-001/</url>
    <content><![CDATA[<h2 id="ElasticSearch的搭建安装和部署"><a href="#ElasticSearch的搭建安装和部署" class="headerlink" title="ElasticSearch的搭建安装和部署"></a>ElasticSearch的搭建安装和部署</h2><h3 id="文件目录结构"><a href="#文件目录结构" class="headerlink" title="文件目录结构"></a>文件目录结构</h3><p><img src="http://img.upuphub.com/image-20200920121905162-0575808.png" alt="项目文件结构"></p>
<ul>
<li>bin：脚本文件、包括启动ES、安装插件。运行数据统计等。</li>
<li>condig：配置文件、USER、集群、Role Base的相关配置</li>
<li>jdk.app：Java运行环境</li>
<li>lib：Java类库</li>
<li>logs：日志</li>
<li>modules：包含所有的ES模块</li>
<li>plugins：包含所有已安装的插件</li>
</ul>
<p>启动：<strong>➜  bin ./elasticsearch</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  bin ./elasticsearch</span><br><span class="line">[2020-09-20T12:10:45,058][INFO ][o.e.n.Node               ] [LeoWangdeMacBook-Pro.local] version[7.9.1], pid[54756], build[default/tar/083627f112ba94dffc1232e8b42b73492789ef91/2020-09-01T21:22:21.964974Z], OS[Mac OS X/10.15.6/x86_64], JVM[AdoptOpenJDK/OpenJDK 64-Bit Server VM/14.0.1/14.0.1+7]</span><br><span class="line">[2020-09-20T12:10:45,062][INFO ][o.e.n.Node               ] [LeoWangdeMacBook-Pro.local] JVM home [/Users/leo/Tools/elasticsearch-7.9.1/jdk.app/Contents/Home]</span><br><span class="line">[2020-09-20T12:10:45,062][INFO ][o.e.n.Node               ] [LeoWangdeMacBook-Pro.local] JVM arguments [-Xshare:auto, -Des.networkaddress.cache.ttl=60, -Des.networkaddress.cache.negative.ttl=10, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless=true, -Dfile.encoding=UTF-8, -Djna.nosys=true, -XX:-OmitStackTraceInFastThrow, -XX:+ShowCodeDetailsInExceptionMessages, -Dio.netty.noUnsafe=true, -Dio.netty.noKeySetOptimization=true, -Dio.netty.recycler.maxCapacityPerThread=0, -Dio.netty.allocator.numDirectArenas=0, -Dlog4j.shutdownHookEnabled=false, -Dlog4j2.disable.jmx=true, -Djava.locale.providers=SPI,COMPAT, -Xms1g, -Xmx1g, -XX:+UseG1GC, -XX:G1ReservePercent=25, -XX:InitiatingHeapOccupancyPercent=30, -Djava.io.tmpdir=/var/folders/pr/1s6y6x8s4_798www9hyr0p0m0000gn/T/elasticsearch-12523685105788999697, -XX:+HeapDumpOnOutOfMemoryError, -XX:HeapDumpPath=data, -XX:ErrorFile=logs/hs_err_pid%p.log, -Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m, -XX:MaxDirectMemorySize=536870912, -Des.path.home=/Users/leo/Tools/elasticsearch-7.9.1, -Des.path.conf=/Users/leo/Tools/elasticsearch-7.9.1/config, -Des.distribution.flavor=default, -Des.distribution.type=tar, -Des.bundled_jdk=true]</span><br><span class="line">[2020-09-20T12:10:46,910][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [aggs-matrix-stats]</span><br><span class="line">[2020-09-20T12:10:46,911][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [analysis-common]</span><br><span class="line">[2020-09-20T12:10:46,911][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [constant-keyword]</span><br><span class="line">[2020-09-20T12:10:46,911][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [flattened]</span><br><span class="line">[2020-09-20T12:10:46,912][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [frozen-indices]</span><br><span class="line">[2020-09-20T12:10:46,912][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [ingest-common]</span><br><span class="line">[2020-09-20T12:10:46,912][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [ingest-geoip]</span><br><span class="line">[2020-09-20T12:10:46,912][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [ingest-user-agent]</span><br><span class="line">[2020-09-20T12:10:46,912][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [kibana]</span><br><span class="line">[2020-09-20T12:10:46,913][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [lang-expression]</span><br><span class="line">[2020-09-20T12:10:46,913][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [lang-mustache]</span><br><span class="line">[2020-09-20T12:10:46,913][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [lang-painless]</span><br><span class="line">[2020-09-20T12:10:46,913][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [mapper-extras]</span><br><span class="line">[2020-09-20T12:10:46,913][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [parent-join]</span><br><span class="line">[2020-09-20T12:10:46,913][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [percolator]</span><br><span class="line">[2020-09-20T12:10:46,914][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [rank-eval]</span><br><span class="line">[2020-09-20T12:10:46,914][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [reindex]</span><br><span class="line">[2020-09-20T12:10:46,914][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [repository-url]</span><br><span class="line">[2020-09-20T12:10:46,914][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [search-business-rules]</span><br><span class="line">[2020-09-20T12:10:46,915][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [searchable-snapshots]</span><br><span class="line">[2020-09-20T12:10:46,915][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [spatial]</span><br><span class="line">[2020-09-20T12:10:46,915][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [tasks]</span><br><span class="line">[2020-09-20T12:10:46,915][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [transform]</span><br><span class="line">[2020-09-20T12:10:46,915][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [transport-netty4]</span><br><span class="line">[2020-09-20T12:10:46,916][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [vectors]</span><br><span class="line">[2020-09-20T12:10:46,916][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [wildcard]</span><br><span class="line">[2020-09-20T12:10:46,916][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-analytics]</span><br><span class="line">[2020-09-20T12:10:46,916][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-async]</span><br><span class="line">[2020-09-20T12:10:46,916][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-async-search]</span><br><span class="line">[2020-09-20T12:10:46,916][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-autoscaling]</span><br><span class="line">[2020-09-20T12:10:46,917][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-ccr]</span><br><span class="line">[2020-09-20T12:10:46,917][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-core]</span><br><span class="line">[2020-09-20T12:10:46,917][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-data-streams]</span><br><span class="line">[2020-09-20T12:10:46,917][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-deprecation]</span><br><span class="line">[2020-09-20T12:10:46,917][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-enrich]</span><br><span class="line">[2020-09-20T12:10:46,917][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-eql]</span><br><span class="line">[2020-09-20T12:10:46,918][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-graph]</span><br><span class="line">[2020-09-20T12:10:46,918][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-identity-provider]</span><br><span class="line">[2020-09-20T12:10:46,918][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-ilm]</span><br><span class="line">[2020-09-20T12:10:46,918][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-logstash]</span><br><span class="line">[2020-09-20T12:10:46,918][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-ml]</span><br><span class="line">[2020-09-20T12:10:46,919][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-monitoring]</span><br><span class="line">[2020-09-20T12:10:46,919][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-ql]</span><br><span class="line">[2020-09-20T12:10:46,919][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-rollup]</span><br><span class="line">[2020-09-20T12:10:46,919][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-security]</span><br><span class="line">[2020-09-20T12:10:46,919][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-sql]</span><br><span class="line">[2020-09-20T12:10:46,919][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-stack]</span><br><span class="line">[2020-09-20T12:10:46,919][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-voting-only-node]</span><br><span class="line">[2020-09-20T12:10:46,920][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded module [x-pack-watcher]</span><br><span class="line">[2020-09-20T12:10:46,920][INFO ][o.e.p.PluginsService     ] [LeoWangdeMacBook-Pro.local] loaded plugin [analysis-icu]</span><br><span class="line">[2020-09-20T12:10:46,960][INFO ][o.e.e.NodeEnvironment    ] [LeoWangdeMacBook-Pro.local] using [1] data paths, mounts [[/System/Volumes/Data (/dev/disk1s1)]], net usable_space [149.5gb], net total_space [233.4gb], types [apfs]</span><br><span class="line">[2020-09-20T12:10:46,960][INFO ][o.e.e.NodeEnvironment    ] [LeoWangdeMacBook-Pro.local] heap size [1gb], compressed ordinary object pointers [true]</span><br><span class="line">[2020-09-20T12:10:47,060][INFO ][o.e.n.Node               ] [LeoWangdeMacBook-Pro.local] node name [LeoWangdeMacBook-Pro.local], node ID [YxIXbsumQAeVzuxPgWwQvA], cluster name [elasticsearch]</span><br><span class="line">[2020-09-20T12:10:50,165][INFO ][o.e.x.m.p.l.CppLogMessageHandler] [LeoWangdeMacBook-Pro.local] [controller/54798] [Main.cc@114] controller (64 bit): Version 7.9.1 (Build 6ed2566ba11bb5) Copyright (c) 2020 Elasticsearch BV</span><br><span class="line">[2020-09-20T12:10:50,997][INFO ][o.e.x.s.a.s.FileRolesStore] [LeoWangdeMacBook-Pro.local] parsed [0] roles from file [/Users/leo/Tools/elasticsearch-7.9.1/config/roles.yml]</span><br><span class="line">[2020-09-20T12:10:51,861][INFO ][o.e.d.DiscoveryModule    ] [LeoWangdeMacBook-Pro.local] using discovery type [zen] and seed hosts providers [settings]</span><br><span class="line">[2020-09-20T12:10:52,299][WARN ][o.e.g.DanglingIndicesState] [LeoWangdeMacBook-Pro.local] gateway.auto_import_dangling_indices is disabled, dangling indices will not be automatically detected or imported and must be managed manually</span><br><span class="line">[2020-09-20T12:10:52,630][INFO ][o.e.n.Node               ] [LeoWangdeMacBook-Pro.local] initialized</span><br><span class="line">[2020-09-20T12:10:52,630][INFO ][o.e.n.Node               ] [LeoWangdeMacBook-Pro.local] starting ...</span><br><span class="line">[2020-09-20T12:10:57,772][INFO ][o.e.t.TransportService   ] [LeoWangdeMacBook-Pro.local] publish_address &#123;127.0.0.1:9300&#125;, bound_addresses &#123;[::1]:9300&#125;, &#123;127.0.0.1:9300&#125;</span><br><span class="line">[2020-09-20T12:10:58,048][WARN ][o.e.b.BootstrapChecks    ] [LeoWangdeMacBook-Pro.local] the default discovery settings are unsuitable for production use; at least one of [discovery.seed_hosts, discovery.seed_providers, cluster.initial_master_nodes] must be configured</span><br><span class="line">[2020-09-20T12:10:58,049][INFO ][o.e.c.c.Coordinator      ] [LeoWangdeMacBook-Pro.local] cluster UUID [QcR_jXXaRB6DKSkYv_IDcQ]</span><br><span class="line">[2020-09-20T12:10:58,056][INFO ][o.e.c.c.ClusterBootstrapService] [LeoWangdeMacBook-Pro.local] no discovery configuration found, will perform best-effort cluster bootstrapping after [3s] unless existing master is discovered</span><br><span class="line">[2020-09-20T12:10:58,155][INFO ][o.e.c.s.MasterService    ] [LeoWangdeMacBook-Pro.local] elected-as-master ([1] nodes joined)[&#123;LeoWangdeMacBook-Pro.local&#125;&#123;YxIXbsumQAeVzuxPgWwQvA&#125;&#123;1VVNmpljRGGTot4vIl_h5Q&#125;&#123;127.0.0.1&#125;&#123;127.0.0.1:9300&#125;&#123;dilmrt&#125;&#123;ml.machine_memory=17179869184, xpack.installed=true, transform.node=true, ml.max_open_jobs=20&#125; elect leader, _BECOME_MASTER_TASK_, _FINISH_ELECTION_], term: 2, version: 36, delta: master node changed &#123;previous [], current [&#123;LeoWangdeMacBook-Pro.local&#125;&#123;YxIXbsumQAeVzuxPgWwQvA&#125;&#123;1VVNmpljRGGTot4vIl_h5Q&#125;&#123;127.0.0.1&#125;&#123;127.0.0.1:9300&#125;&#123;dilmrt&#125;&#123;ml.machine_memory=17179869184, xpack.installed=true, transform.node=true, ml.max_open_jobs=20&#125;]&#125;</span><br><span class="line">[2020-09-20T12:10:58,219][INFO ][o.e.c.s.ClusterApplierService] [LeoWangdeMacBook-Pro.local] master node changed &#123;previous [], current [&#123;LeoWangdeMacBook-Pro.local&#125;&#123;YxIXbsumQAeVzuxPgWwQvA&#125;&#123;1VVNmpljRGGTot4vIl_h5Q&#125;&#123;127.0.0.1&#125;&#123;127.0.0.1:9300&#125;&#123;dilmrt&#125;&#123;ml.machine_memory=17179869184, xpack.installed=true, transform.node=true, ml.max_open_jobs=20&#125;]&#125;, term: 2, version: 36, reason: Publication&#123;term=2, version=36&#125;</span><br><span class="line">[2020-09-20T12:10:58,253][INFO ][o.e.h.AbstractHttpServerTransport] [LeoWangdeMacBook-Pro.local] publish_address &#123;127.0.0.1:9200&#125;, bound_addresses &#123;[::1]:9200&#125;, &#123;127.0.0.1:9200&#125;</span><br><span class="line">[2020-09-20T12:10:58,254][INFO ][o.e.n.Node               ] [LeoWangdeMacBook-Pro.local] started</span><br><span class="line">[2020-09-20T12:10:58,408][INFO ][o.e.l.LicenseService     ] [LeoWangdeMacBook-Pro.local] license [322a2d29-7ef9-439a-99f5-69074647e8ab] mode [basic] - valid</span><br><span class="line">[2020-09-20T12:10:58,410][INFO ][o.e.x.s.s.SecurityStatusChangeListener] [LeoWangdeMacBook-Pro.local] Active license is now [BASIC]; Security is disabled</span><br><span class="line">[2020-09-20T12:10:58,416][INFO ][o.e.g.GatewayService     ] [LeoWangdeMacBook-Pro.local] recovered [0] indices into cluster_state</span><br></pre></td></tr></table></figure>

<p>➜ 访问：<a href="http://localhost:9200/" target="_blank" rel="noopener">http://localhost:9200/</a></p>
<p><img src="http://img.upuphub.com/image-20200920122055780-0575998.png" alt="安装部署成功"></p>
<h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  bin ./elasticsearch-plugin list</span><br><span class="line">➜  bin ./elasticsearch-plugin install analysis-icu</span><br><span class="line"><span class="meta">-&gt;</span><span class="bash"> Installing analysis-icu</span></span><br><span class="line"><span class="meta">-&gt;</span><span class="bash"> Downloading analysis-icu from elastic</span></span><br><span class="line">[=================================================] 100%</span><br><span class="line"><span class="meta">-&gt;</span><span class="bash"> Installed analysis-icu</span></span><br><span class="line">➜  bin ./elasticsearch-plugin list</span><br><span class="line">analysis-icu</span><br></pre></td></tr></table></figure>

<p><img src="http://img.upuphub.com/image-20200920121717443.png" alt="插件安装"></p>
<h2 id="Kibana的搭建安装和部署"><a href="#Kibana的搭建安装和部署" class="headerlink" title="Kibana的搭建安装和部署"></a>Kibana的搭建安装和部署</h2>]]></content>
      <categories>
        <category>Elastic</category>
      </categories>
      <tags>
        <tag>ElasticSearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Java Microbenchmark Harness微基准测试基础</title>
    <url>/2020/07/07/Java-Microbenchmark-Harness-Basic/</url>
    <content><![CDATA[<blockquote>
<p><strong>If you cannot measure it, you cannot improve it.    –Lord Kelvin</strong></p>
</blockquote>
<p><a href="http://openjdk.java.net/projects/code-tools/jmh/" target="_blank" rel="noopener">Java Microbenchmark Harness</a> 是专门进行代码的微基准测试的一套工具API。 为应用提供了数据支持，是评价和比较方法好坏的基准。一般说JMH，是在 <strong>Method 层面上的 Benchmark</strong>，精度可以精确到微秒级。以下记录JMH的使用和相关基础，便于之后查找和学习。</p>
<p>Benchmark 作为应用框架，产品的基准画像，存在统一的标准，避免了不同测评对象自说自话的尴尬，应用框架各自使用有利于自身场景的测评方式必然不可取。</p>
<a id="more"></a>

<h2 id="Hello-JHM"><a href="#Hello-JHM" class="headerlink" title="Hello JHM"></a>Hello JHM</h2><h3 id="Maven依赖"><a href="#Maven依赖" class="headerlink" title="Maven依赖"></a>Maven依赖</h3><p>在项目中使用Maven,只需要添加如下依赖：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- JMH--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.openjdk.jmh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jmh-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jmh.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.openjdk.jmh<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jmh-generator-annprocess<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;jmh.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="性能测试设计"><a href="#性能测试设计" class="headerlink" title="性能测试设计"></a>性能测试设计</h3><p>测试比较Spring和StringBuilder的完成字符串拼接的性能</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 比较字符串直接相加和StringBuilder的效率</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Leo Wang</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> 1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/7/7 16:44</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@BenchmarkMode</span>(Mode.Throughput)</span><br><span class="line"><span class="meta">@Warmup</span>(iterations = <span class="number">1</span>,time = <span class="number">1</span>, timeUnit = TimeUnit.SECONDS)</span><br><span class="line"><span class="meta">@Measurement</span>(iterations = <span class="number">10</span>,time = <span class="number">10</span>,timeUnit = TimeUnit.SECONDS)</span><br><span class="line"><span class="meta">@Threads</span>(<span class="number">8</span>)</span><br><span class="line"><span class="meta">@Fork</span>(<span class="number">2</span>)</span><br><span class="line"><span class="meta">@OutputTimeUnit</span>(TimeUnit.MILLISECONDS)</span><br><span class="line"><span class="meta">@State</span>(Scope.Thread)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringBuilderBenchmark</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Benchmark</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testStringAdd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String a = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            a += i;</span><br><span class="line">        &#125;</span><br><span class="line">        print(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Benchmark</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testStringBuilderAdd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            sb.append(i);</span><br><span class="line">        &#125;</span><br><span class="line">        print(sb.toString());</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(String a)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="性能测试执行"><a href="#性能测试执行" class="headerlink" title="性能测试执行"></a>性能测试执行</h3><p>对于JMH来说，其执行方式主要有两种</p>
<h4 id="直接IDE运行"><a href="#直接IDE运行" class="headerlink" title="直接IDE运行"></a>直接IDE运行</h4><p>对于体量小的测试，可以直接在IDE中完成相关的测试。如上的测试来说，可以直接运行，然后查看相关结果，执行的结果的Main函数如下，创建<em>Options</em>对象，传入需要执行的测试和测试报告的输出地址。直接执行Main方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> RunnerException </span>&#123;</span><br><span class="line">    String userDirPath = System.getProperty(<span class="string">"user.dir"</span>);</span><br><span class="line">    String benchmarkLogPath = String.format(<span class="string">"%s/%s"</span>,userDirPath,<span class="string">"/StringBenchmark.log"</span>);</span><br><span class="line">    Options options = <span class="keyword">new</span> OptionsBuilder()</span><br><span class="line">            .include(StringBuilderBenchmark<span class="class">.<span class="keyword">class</span>.<span class="title">getSimpleName</span>())</span></span><br><span class="line"><span class="class">            .<span class="title">output</span>(<span class="title">benchmarkLogPath</span>)</span></span><br><span class="line"><span class="class">            .<span class="title">build</span>()</span>;</span><br><span class="line">    <span class="keyword">new</span> Runner(options).run();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在使用IDE进行测试时，需要注意不能使用<strong>Dubug</strong>模式启动，否则不能正常完成测试。</p>
<h4 id="打包成Jar-其他机器上执行"><a href="#打包成Jar-其他机器上执行" class="headerlink" title="打包成Jar,其他机器上执行"></a>打包成Jar,其他机器上执行</h4><p>一般对于大型的测试，需要测试时间比较久，线程比较多，就需要去写好了丢到远端的Linux系统环境中里执行， 不然会在本机执行很久并且需要的性能需求可能达不到测试需求。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mvn clean package</span><br><span class="line">java -jar StringBuilderBenchmark.jar</span><br></pre></td></tr></table></figure>

<h3 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h3><p>当正常跑完项目测试以后，JHM会在指定的文件夹下输出一下的测试结果</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> JMH version: 1.23</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> VM version: JDK 1.8.0_251, Java HotSpot(TM) 64-Bit Server VM, 25.251-b08</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/bin/java</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=63118:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Warmup: 1 iterations, 1 s each</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Measurement: 10 iterations, 10 s each</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Timeout: 10 min per iteration</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Threads: 8 threads, will synchronize iterations</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Benchmark mode: Throughput, ops/time</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Benchmark: com.upuphub.lake.skylake.benchmark.StringBuilderBenchmark.testStringAdd</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Run progress: 0.00% complete, ETA 00:06:44</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Fork: 1 of 2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Warmup Iteration   1: 9014.340 ops/ms</span></span><br><span class="line">Iteration   1: 21302.297 ops/ms</span><br><span class="line">Iteration   2: 21807.763 ops/ms</span><br><span class="line">Iteration   3: 21812.419 ops/ms</span><br><span class="line">Iteration   4: 21840.912 ops/ms</span><br><span class="line">Iteration   5: 21985.020 ops/ms</span><br><span class="line">Iteration   6: 22066.751 ops/ms</span><br><span class="line">Iteration   7: 22006.021 ops/ms</span><br><span class="line">Iteration   8: 19239.509 ops/ms</span><br><span class="line">Iteration   9: 10515.274 ops/ms</span><br><span class="line">Iteration  10: 11758.987 ops/ms</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Run progress: 25.00% complete, ETA 00:05:21</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Fork: 2 of 2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Warmup Iteration   1: 5273.829 ops/ms</span></span><br><span class="line">Iteration   1: 18880.356 ops/ms</span><br><span class="line">Iteration   2: 22225.847 ops/ms</span><br><span class="line">Iteration   3: 22017.665 ops/ms</span><br><span class="line">Iteration   4: 22036.969 ops/ms</span><br><span class="line">Iteration   5: 22080.422 ops/ms</span><br><span class="line">Iteration   6: 22262.118 ops/ms</span><br><span class="line">Iteration   7: 22153.187 ops/ms</span><br><span class="line">Iteration   8: 22105.884 ops/ms</span><br><span class="line">Iteration   9: 21613.504 ops/ms</span><br><span class="line">Iteration  10: 22029.923 ops/ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Result "com.upuphub.lake.skylake.benchmark.StringBuilderBenchmark.testStringAdd":</span><br><span class="line">  20587.041 ±(99.9%) 2921.754 ops/ms [Average]</span><br><span class="line">  (min, avg, max) = (10515.274, 20587.041, 22262.118), stdev = 3364.697</span><br><span class="line">  CI (99.9%): [17665.287, 23508.796] (assumes normal distribution)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> JMH version: 1.23</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> VM version: JDK 1.8.0_251, Java HotSpot(TM) 64-Bit Server VM, 25.251-b08</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> VM invoker: /Library/Java/JavaVirtualMachines/jdk1.8.0_251.jdk/Contents/Home/jre/bin/java</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=63118:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Warmup: 1 iterations, 1 s each</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Measurement: 10 iterations, 10 s each</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Timeout: 10 min per iteration</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Threads: 8 threads, will synchronize iterations</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Benchmark mode: Throughput, ops/time</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Benchmark: com.upuphub.lake.skylake.benchmark.StringBuilderBenchmark.testStringBuilderAdd</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Run progress: 50.00% complete, ETA 00:03:34</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Fork: 1 of 2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Warmup Iteration   1: 50084.373 ops/ms</span></span><br><span class="line">Iteration   1: 67510.457 ops/ms</span><br><span class="line">Iteration   2: 42202.643 ops/ms</span><br><span class="line">Iteration   3: 41633.858 ops/ms</span><br><span class="line">Iteration   4: 43352.405 ops/ms</span><br><span class="line">Iteration   5: 43748.063 ops/ms</span><br><span class="line">Iteration   6: 45176.476 ops/ms</span><br><span class="line">Iteration   7: 44649.922 ops/ms</span><br><span class="line">Iteration   8: 40872.340 ops/ms</span><br><span class="line">Iteration   9: 40520.724 ops/ms</span><br><span class="line">Iteration  10: 38853.095 ops/ms</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Run progress: 75.00% complete, ETA 00:01:47</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Fork: 2 of 2</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Warmup Iteration   1: 45279.748 ops/ms</span></span><br><span class="line">Iteration   1: 71985.226 ops/ms</span><br><span class="line">Iteration   2: 43291.826 ops/ms</span><br><span class="line">Iteration   3: 44149.181 ops/ms</span><br><span class="line">Iteration   4: 43297.043 ops/ms</span><br><span class="line">Iteration   5: 40614.460 ops/ms</span><br><span class="line">Iteration   6: 40444.594 ops/ms</span><br><span class="line">Iteration   7: 40912.490 ops/ms</span><br><span class="line">Iteration   8: 41428.454 ops/ms</span><br><span class="line">Iteration   9: 43022.557 ops/ms</span><br><span class="line">Iteration  10: 43368.455 ops/ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Result "com.upuphub.lake.skylake.benchmark.StringBuilderBenchmark.testStringBuilderAdd":</span><br><span class="line">  45051.713 ±(99.9%) 7496.158 ops/ms [Average]</span><br><span class="line">  (min, avg, max) = (38853.095, 45051.713, 71985.226), stdev = 8632.587</span><br><span class="line">  CI (99.9%): [37555.555, 52547.872] (assumes normal distribution)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Run complete. Total time: 00:07:08</span></span><br><span class="line"></span><br><span class="line">REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on</span><br><span class="line">why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial</span><br><span class="line">experiments, perform baseline and negative tests that provide experimental control, make sure</span><br><span class="line">the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.</span><br><span class="line">Do not assume the numbers tell you what you want them to tell.</span><br><span class="line"></span><br><span class="line">Benchmark                                     Mode  Cnt      Score      Error   Units</span><br><span class="line">StringBuilderBenchmark.testStringAdd         thrpt   20  20587.041 ± 2921.754  ops/ms</span><br><span class="line">StringBuilderBenchmark.testStringBuilderAdd  thrpt   20  45051.713 ± 7496.158  ops/ms</span><br></pre></td></tr></table></figure>

<p>整个测试报告由三个部分组成，首先分别是<strong>testStringAdd</strong>的测试结果然后是<strong>testStringBuilderAdd</strong>的测试结果，最后时两个测试结果之间的结果汇总和对应的比较。前两个部分的结果是类似的，会列出测试环境的一些基本信息，包括JHM的版本、虚拟机版本和相关一些配置等的信息以及测试的一些配置和设置，然后就是预热迭代执行（Warmup Iteration）， 然后是正常的迭代执行（Iteration），最后是结果（Result）的信息输出。一般来说最关注第三部分，也就是汇总结果。</p>
<blockquote>
<p>Tips: 对于汇总结果部分的输出,Error是没有数据的，这里是Score过长挤过去的</p>
</blockquote>
<p>可以看出StringBuilder在做字符串拼接的速度比String的直接评价速度好两倍以上。</p>
<h2 id="JHM的注解和功能"><a href="#JHM的注解和功能" class="headerlink" title="JHM的注解和功能"></a>JHM的注解和功能</h2><h3 id="BenchmarkMode"><a href="#BenchmarkMode" class="headerlink" title="@BenchmarkMode"></a><em>@BenchmarkMode</em></h3><p>基准测试类型。这里选择的是Throughput也就是吞吐量。吞吐量会得到单位时间内可以进行的操作数。</p>
<ul>
<li>Throughput: 整体吞吐量，例如“1秒内可以执行多少次调用”。</li>
<li>AverageTime: 调用的平均时间，例如“每次调用平均耗时xxx毫秒”。</li>
<li>SampleTime: 随机取样，最后输出取样结果的分布，例如“99%的调用在xxx毫秒以内，99.99%的调用在xxx毫秒以内”</li>
<li>SingleShotTime: 以上模式都是默认一次 iteration 是 1s，唯有 SingleShotTime 是只运行一次。往往同时把 warmup 次数设为0，用于测试冷启动时的性能。</li>
<li>All(“all”, “All benchmark modes”): 执行所有模式。</li>
</ul>
<h3 id="Warmup"><a href="#Warmup" class="headerlink" title="@Warmup"></a><em>@Warmup</em></h3><p>在进行基准测试前需要进行预热。一般前几次进行程序测试的时候都会比较慢， 所以要让程序进行几轮预热，保证测试的准确性。其中的参数iterations就是预热轮数。</p>
<blockquote>
<p>Tips: 因为 JVM 的 JIT 机制的存在，如果某个函数被调用多次之后，JVM 会尝试将其编译成为机器码从而提高执行速度。所以为了让 benchmark 的结果更加接近真实情况就需要进行预热</p>
</blockquote>
<h3 id="Measurement"><a href="#Measurement" class="headerlink" title="@Measurement"></a><em>@Measurement</em></h3><p>度量，一些基本的测试参数。</p>
<ol>
<li>iterations 进行测试的轮次</li>
<li>time 每轮进行的时长</li>
<li>timeUnit 时长单位</li>
</ol>
<p>可以根据具体情况调整。一般比较重的东西可以进行大量的测试，放到服务器上运行。</p>
<h3 id="Threads"><a href="#Threads" class="headerlink" title="@Threads"></a><em>@Threads</em></h3><p>每个进程中的测试线程，根据具体情况选择，一般为cpu乘以2。</p>
<h3 id="Fork"><a href="#Fork" class="headerlink" title="@Fork"></a><em>@Fork</em></h3><p>进行 fork 的次数。如果 fork 数是2的话，则 JMH 会 fork 出两个进程来进行测试。</p>
<h3 id="OutputTimeUnit"><a href="#OutputTimeUnit" class="headerlink" title="@OutputTimeUnit"></a><em>@OutputTimeUnit</em></h3><p>基准测试结果的时间类型。一般选择秒、毫秒、微秒。</p>
<h3 id="Benchmark"><a href="#Benchmark" class="headerlink" title="@Benchmark"></a><em>@Benchmark</em></h3><p>方法级注解，表示该方法是需要进行 benchmark ，用法和 JUnit 的 @Test 类似。</p>
<h3 id="Param"><a href="#Param" class="headerlink" title="@Param"></a><em>@Param</em></h3><p>属性级注解，@Param 用来指定某项参数的多种情况。适合用来测试一个函数在不同的参数输入的情况下的性能。</p>
<h3 id="Setup"><a href="#Setup" class="headerlink" title="@Setup"></a><em>@Setup</em></h3><p>方法级注解，需要在测试之前进行一些准备工作，比如对一些数据的初始化。</p>
<h3 id="TearDown"><a href="#TearDown" class="headerlink" title="@TearDown"></a><em>@TearDown</em></h3><p>方法级注解，在测试之后进行一些结束工作，比如关闭线程池，数据库连接等的，主要用于资源的回收等。</p>
<h3 id="State"><a href="#State" class="headerlink" title="@State"></a><em>@State</em></h3><p>当使用@Setup参数的时候，必须在类上加这个参数，不然会提示无法运行。</p>
<p>State 用于声明某个类是一个“状态”，然后接受一个 Scope 参数用来表示该状态的共享范围。 很多 benchmark 会需要一些表示状态的类，JMH 允许你把这些类以依赖注入的方式注入到 benchmark 函数里。Scope 主要分为三种。</p>
<ol>
<li>Thread: 该状态为每个线程独享。</li>
<li>Group: 该状态为同一个组里面所有线程共享。</li>
<li>Benchmark: 该状态在所有线程间共享。</li>
</ol>
<h2 id="补充说明"><a href="#补充说明" class="headerlink" title="补充说明"></a>补充说明</h2><p>在日常的工作和学习中，常常会遇到三种类型的问题，JHM对其能很好就觉很处理。</p>
<ul>
<li>对方法或库的不同实现方式的性能分析测试和最后的采用取舍</li>
<li>方法入参对方法的性能影响和限制</li>
<li>对项目中的热点方法的优化和其优化效果的定性分析。</li>
</ul>
<hr>
<h2 id="参考和来源"><a href="#参考和来源" class="headerlink" title="参考和来源"></a>参考和来源</h2><ul>
<li><a href="https://www.xncoding.com/2018/01/07/java/jmh.html" target="_blank" rel="noopener">Java微基准测试框架JMH</a></li>
<li><a href="http://irfen.me/java-jmh-simple-microbenchmark/" target="_blank" rel="noopener">Java使用JMH进行简单的基准测试Benchmark</a></li>
<li><a href="http://blog.dyngr.com/blog/2016/10/29/introduction-of-jmh/" target="_blank" rel="noopener">Java 并发编程笔记：JMH 性能测试框架</a></li>
<li><a href="http://tutorials.jenkov.com/java-performance/jmh.html" target="_blank" rel="noopener">JMH - Java Microbenchmark Harness</a></li>
</ul>
]]></content>
      <categories>
        <category>系统调优</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>基准测试</tag>
        <tag>系统调优</tag>
        <tag>JMH</tag>
        <tag>基础</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins利用Github的Webhook自动部署Springboot项目</title>
    <url>/2020/08/03/Jenkins-Github-Springboot-Auto-Deploy/</url>
    <content><![CDATA[<h3 id="Jenkins利用Github的Webhook自动部署Springboot项目"><a href="#Jenkins利用Github的Webhook自动部署Springboot项目" class="headerlink" title="Jenkins利用Github的Webhook自动部署Springboot项目"></a>Jenkins利用Github的Webhook自动部署Springboot项目</h3><p>Jenkins是开源CI&amp;CD软件领导者，是Devops神器，这里记录Jenkins对基于Maven构建的Springboot项目，自动构建，部署的部分细节已便之后查看.</p>
<a id="more"></a>

]]></content>
      <categories>
        <category>DevOps</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Liunx</tag>
        <tag>Jenkins</tag>
        <tag>Springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>Liuns系统高效文件处理三剑客-Grep/Awk/Sed</title>
    <url>/2020/08/14/Liunx-Tips-001-Grep-Awk-Sed/</url>
    <content><![CDATA[<blockquote>
<p><strong>子曰：“工欲善其事，必先利其器。居是邦也，事其大夫之贤者，友其士之仁者。”</strong> –论语·卫灵公</p>
</blockquote>
<h3 id="Grep"><a href="#Grep" class="headerlink" title="Grep"></a>Grep</h3><p><a href="https://zh.wikipedia.org/wiki/Grep" target="_blank" rel="noopener">Grep</a>(global search regular expression(RE) and print out the line)是一款强大的文本搜索工具，支持正则表达式。来自Unix文本编辑器ed类似操作的命令,最初用于Unix操作系统的命令行工具。在给出文件列表或标准输入后，grep会对匹配一个或多个正则表达式的文本进行搜索，并只输出匹配（或者不匹配）的行或文本。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Aliyun-Service ~]# grep --help</span><br><span class="line">用法: grep [选项]... PATTERN [FILE]...</span><br><span class="line">Search for PATTERN in each FILE.</span><br><span class="line">Example: grep -i 'hello world' menu.h main.c</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Pattern selection and interpretation:</span><br><span class="line">  -E, --extended-regexp     PATTERN is an extended regular expression</span><br><span class="line">  -F, --fixed-strings       PATTERN is a set of newline-separated strings</span><br><span class="line">  -G, --basic-regexp        PATTERN is a basic regular expression (default)</span><br><span class="line">  -P, --perl-regexp         PATTERN is a Perl regular expression</span><br><span class="line">  -e, --regexp=PATTERN      用 PATTERN 来进行匹配操作</span><br><span class="line">  -f, --file=FILE           从 FILE 中取得 PATTERN</span><br><span class="line">  -i, --ignore-case         忽略大小写</span><br><span class="line">  -w, --word-regexp         强制 PATTERN 仅完全匹配字词</span><br><span class="line">  -x, --line-regexp         强制 PATTERN 仅完全匹配一行</span><br><span class="line">  -z, --null-data           一个 0 字节的数据行，但不是空行</span><br><span class="line"></span><br><span class="line">杂项:</span><br><span class="line">  -s, --no-messages         不显示错误信息</span><br><span class="line">  -v, --invert-match        选中不匹配的行</span><br><span class="line">  -V, --version             显示版本信息并退出</span><br><span class="line">      --help                显示此帮助并退出</span><br><span class="line"></span><br><span class="line">Output control:</span><br><span class="line">  -m, --max-count=NUM       stop after NUM selected lines</span><br><span class="line">  -b, --byte-offset         print the byte offset with output lines</span><br><span class="line">  -n, --line-number         print line number with output lines</span><br><span class="line">      --line-buffered       flush output on every line</span><br><span class="line">  -H, --with-filename       print file name with output lines</span><br><span class="line">  -h, --no-filename         suppress the file name prefix on output</span><br><span class="line">      --label=LABEL         use LABEL as the standard input file name prefix</span><br><span class="line">  -o, --only-matching       只显示匹配PATTERN 部分的行</span><br><span class="line">  -q, --quiet, --silent     不显示所有常规输出</span><br><span class="line">      --binary-files=TYPE   设定二进制文件的TYPE 类型；</span><br><span class="line">                            TYPE 可以是`binary', `text', 或`without-match'</span><br><span class="line">  -a, --text                等同于 --binary-files=text</span><br><span class="line">  -I                        equivalent to --binary-files=without-match</span><br><span class="line">  -d, --directories=ACTION  how to handle directories;</span><br><span class="line">                            ACTION is 'read', 'recurse', or 'skip'</span><br><span class="line">  -D, --devices=ACTION      how to handle devices, FIFOs and sockets;</span><br><span class="line">                            ACTION is 'read' or 'skip'</span><br><span class="line">  -r, --recursive           like --directories=recurse</span><br><span class="line">  -R, --dereference-recursive</span><br><span class="line">                            likewise, but follow all symlinks</span><br><span class="line">      --include=FILE_PATTERN</span><br><span class="line">                            search only files that match FILE_PATTERN</span><br><span class="line">      --exclude=FILE_PATTERN</span><br><span class="line">                            skip files and directories matching FILE_PATTERN</span><br><span class="line">      --exclude-from=FILE   skip files matching any file pattern from FILE</span><br><span class="line">      --exclude-dir=PATTERN directories that match PATTERN will be skipped.</span><br><span class="line">  -L, --files-without-match print only names of FILEs with no selected lines</span><br><span class="line">  -l, --files-with-matches  print only names of FILEs with selected lines</span><br><span class="line">  -c, --count               print only a count of selected lines per FILE</span><br><span class="line"></span><br><span class="line">文件控制:</span><br><span class="line">  -B, --before-context=NUM  打印文本及其前面NUM 行</span><br><span class="line">  -A, --after-context=NUM   打印文本及其后面NUM 行</span><br><span class="line">  -C, --context=NUM         打印NUM 行输出文本</span><br><span class="line">  -NUM                      same as --context=NUM</span><br><span class="line">      --group-separator=SEP use SEP as a group separator</span><br><span class="line">      --no-group-separator  use empty string as a group separator</span><br><span class="line">      --color[=WHEN],</span><br><span class="line">      --colour[=WHEN]       use markers to highlight the matching strings;</span><br><span class="line">                            WHEN is 'always', 'never', or 'auto'</span><br><span class="line">  -U, --binary              do not strip CR characters at EOL (MSDOS/Windows)</span><br></pre></td></tr></table></figure>

<p>常用参数:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-v        取反</span><br><span class="line">-i        忽略大小写</span><br><span class="line">-c        符合条件的行数</span><br><span class="line">-n        输出的同时打印行号</span><br><span class="line">^*        以*开头         </span><br><span class="line">*$         以*结尾 </span><br><span class="line">^$         空行 </span><br><span class="line"></span><br><span class="line">-a        不忽略二进制数据</span><br><span class="line">-A&lt;n&gt;     除了显示匹配的行外，还显示之后的n行</span><br><span class="line">-b        在符合条件的行之前，显示该行第一个字符的编号</span><br></pre></td></tr></table></figure>

<p>Demo文案</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Aliyun-Service ~]# cat demo.log</span><br><span class="line">I came;</span><br><span class="line">I saw;</span><br><span class="line">i conquered.</span><br><span class="line"></span><br><span class="line">我来了，我看到了，我征服了.   ——凯撒大帝</span><br></pre></td></tr></table></figure>

<h4 id="查找符合条件的行"><a href="#查找符合条件的行" class="headerlink" title="查找符合条件的行"></a>查找符合条件的行</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Aliyun-Service ~]# cat demo.log |grep 'I'</span><br><span class="line">I came;</span><br><span class="line">I saw;</span><br></pre></td></tr></table></figure>

<h4 id="查找符合条件的行数"><a href="#查找符合条件的行数" class="headerlink" title="查找符合条件的行数"></a>查找符合条件的行数</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Aliyun-Service ~]# cat demo.log |grep 'I' -c</span><br><span class="line">2</span><br></pre></td></tr></table></figure>

<h4 id="查找不符合条件的行"><a href="#查找不符合条件的行" class="headerlink" title="查找不符合条件的行"></a>查找不符合条件的行</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Aliyun-Service ~]# cat demo.log |grep 'I' -v</span><br><span class="line">i conquered.</span><br><span class="line"></span><br><span class="line">我来了，我看到了，我征服了.   ——凯撒大帝</span><br></pre></td></tr></table></figure>

<h4 id="忽略大小写查找"><a href="#忽略大小写查找" class="headerlink" title="忽略大小写查找"></a>忽略大小写查找</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Aliyun-Service ~]# cat demo.log |grep 'I' -i</span><br><span class="line">I came;</span><br><span class="line">I saw;</span><br><span class="line">i conquered.</span><br></pre></td></tr></table></figure>

<h4 id="查找符合条件的行并输出行号"><a href="#查找符合条件的行并输出行号" class="headerlink" title="查找符合条件的行并输出行号"></a>查找符合条件的行并输出行号</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Aliyun-Service ~]# cat demo.log |grep 'I' -n</span><br><span class="line">1:I came;</span><br><span class="line">2:I saw;</span><br></pre></td></tr></table></figure>

<h4 id="以’-’开头的查询"><a href="#以’-’开头的查询" class="headerlink" title="以’*’开头的查询"></a>以’*’开头的查询</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Aliyun-Service ~]# cat demo.log |grep '^I'</span><br><span class="line">I came;</span><br><span class="line">I saw;</span><br></pre></td></tr></table></figure>

<h4 id="以’-’结尾的查询"><a href="#以’-’结尾的查询" class="headerlink" title="以’*’结尾的查询"></a>以’*’结尾的查询</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Aliyun-Service ~]# cat demo.log |grep '; $'</span><br><span class="line">I came;</span><br><span class="line">I saw;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="Awk"><a href="#Awk" class="headerlink" title="Awk"></a>Awk</h3><p>Awk不仅仅是一个小工具，也可以算得上一种小型的编程语言了，支持if判断分支和while循环语句还有它的内置函数等，是一个要比grep和sed更强大的文本处理工具，但也就意味着要学习的东西更多了。由 Alfred Aho 、Peter Weinberger 和 Brian Kernighan 创始,并以姓氏的首个字母命名.</p>
<h4 id="基本结构和执行"><a href="#基本结构和执行" class="headerlink" title="基本结构和执行"></a>基本结构和执行</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">awk '&#123;[pattern] action&#125;' &#123;filenames&#125;  </span><br><span class="line">awk 'BEGIN&#123; commands &#125; pattern&#123; commands &#125; END&#123; commands &#125;' &#123;filenames&#125;</span><br></pre></td></tr></table></figure>

<p>Awk脚本通常由：BEGIN语句块、能够使用模式匹配的通用语句块、END语句块3部分组成，这三个部分是可选的。任意一个部分都可以不出现在脚本中，脚本通常是被单引号或双引号中.</p>
<ul>
<li>第一步：执行BEGIN{ commands }语句块中的语句；</li>
<li>第二步：从文件或标准输入(stdin)读取一行，然后执行pattern{ commands }语句块，它逐行扫描文件，从第一行到最后一行重复这个过程，直到文件全部被读取完毕。</li>
<li>第三步：当读至输入流末尾时，执行END{ commands }语句块。</li>
</ul>
<p>BEGIN语句块在awk开始从输入流中读取行之前被执行，这是一个可选的语句块，比如变量初始化、打印输出表格的表头等语句通常可以写在BEGIN语句块中。</p>
<p>END语句块在awk从输入流中读取完所有的行之后即被执行，比如打印所有行的分析结果这类信息汇总都是在END语句块中完成，它也是一个可选语句块。</p>
<p>Pattern语句块中的通用命令是最重要的部分，它也是可选的。如果没有提供pattern语句块，则默认执行{ print }，即打印每一个读取到的行，awk读取的每一行都会执行该语句块。</p>
<p>action 在{}内指定，一般用来打印，也可以是一个代码段。也就是commands</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Server ~]# awk --help</span><br><span class="line">Usage: awk [POSIX or GNU style options] -f progfile [--] file ...</span><br><span class="line">Usage: awk [POSIX or GNU style options] [--] 'program' file ...</span><br><span class="line">POSIX options:		GNU long options: (standard)</span><br><span class="line">	-f progfile		--file=progfile</span><br><span class="line">	-F fs			--field-separator=fs</span><br><span class="line">	-v var=val		--assign=var=val</span><br><span class="line">Short options:		GNU long options: (extensions)</span><br><span class="line">	-b			--characters-as-bytes</span><br><span class="line">	-c			--traditional</span><br><span class="line">	-C			--copyright</span><br><span class="line">	-d[file]		--dump-variables[=file]</span><br><span class="line">	-e 'program-text'	--source='program-text'</span><br><span class="line">	-E file			--exec=file</span><br><span class="line">	-g			--gen-pot</span><br><span class="line">	-h			--help</span><br><span class="line">	-L [fatal]		--lint[=fatal]</span><br><span class="line">	-n			--non-decimal-data</span><br><span class="line">	-N			--use-lc-numeric</span><br><span class="line">	-O			--optimize</span><br><span class="line">	-p[file]		--profile[=file]</span><br><span class="line">	-P			--posix</span><br><span class="line">	-r			--re-interval</span><br><span class="line">	-S			--sandbox</span><br><span class="line">	-t			--lint-old</span><br><span class="line">	-V			--version</span><br></pre></td></tr></table></figure>

<h4 id="内建参数"><a href="#内建参数" class="headerlink" title="内建参数"></a>内建参数</h4><table>
<thead>
<tr>
<th align="left">变量</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">$n</td>
<td align="left">当前记录的第n个字段，字段间由FS分隔</td>
</tr>
<tr>
<td align="left">$0</td>
<td align="left">完整的输入记录</td>
</tr>
<tr>
<td align="left">ARGC</td>
<td align="left">命令行参数的数目</td>
</tr>
<tr>
<td align="left">ARGIND</td>
<td align="left">命令行中当前文件的位置(从0开始算)</td>
</tr>
<tr>
<td align="left">ARGV</td>
<td align="left">包含命令行参数的数组</td>
</tr>
<tr>
<td align="left">CONVFMT</td>
<td align="left">数字转换格式(默认值为%.6g)ENVIRON环境变量关联数组</td>
</tr>
<tr>
<td align="left">ERRNO</td>
<td align="left">最后一个系统错误的描述</td>
</tr>
<tr>
<td align="left">FIELDWIDTHS</td>
<td align="left">字段宽度列表(用空格键分隔)</td>
</tr>
<tr>
<td align="left">FILENAME</td>
<td align="left">当前文件名</td>
</tr>
<tr>
<td align="left">FNR</td>
<td align="left">各文件分别计数的行号</td>
</tr>
<tr>
<td align="left">FS</td>
<td align="left">字段分隔符(默认是任何空格)</td>
</tr>
<tr>
<td align="left">IGNORECASE</td>
<td align="left">如果为真，则进行忽略大小写的匹配</td>
</tr>
<tr>
<td align="left">NF</td>
<td align="left">一条记录的字段的数目</td>
</tr>
<tr>
<td align="left">NR</td>
<td align="left">已经读出的记录数，就是行号，从1开始</td>
</tr>
<tr>
<td align="left">OFMT</td>
<td align="left">数字的输出格式(默认值是%.6g)</td>
</tr>
<tr>
<td align="left">OFS</td>
<td align="left">输出记录分隔符（输出换行符），输出时用指定的符号代替换行符</td>
</tr>
<tr>
<td align="left">ORS</td>
<td align="left">输出记录分隔符(默认值是一个换行符)</td>
</tr>
<tr>
<td align="left">RLENGTH</td>
<td align="left">由match函数所匹配的字符串的长度</td>
</tr>
<tr>
<td align="left">RS</td>
<td align="left">记录分隔符(默认是一个换行符)</td>
</tr>
<tr>
<td align="left">RSTART</td>
<td align="left">由match函数所匹配的字符串的第一个位置</td>
</tr>
<tr>
<td align="left">SUBSEP</td>
<td align="left">数组下标分隔符(默认值是/034)</td>
</tr>
</tbody></table>
<h4 id="运算支持"><a href="#运算支持" class="headerlink" title="运算支持"></a>运算支持</h4><table>
<thead>
<tr>
<th align="left">运算符</th>
<th align="left">描述</th>
</tr>
</thead>
<tbody><tr>
<td align="left">= += -= <em>= /= %= ^= *</em>=</td>
<td align="left">赋值</td>
</tr>
<tr>
<td align="left">?:</td>
<td align="left">C条件表达式</td>
</tr>
<tr>
<td align="left">||</td>
<td align="left">逻辑或</td>
</tr>
<tr>
<td align="left">&amp;&amp;</td>
<td align="left">逻辑与</td>
</tr>
<tr>
<td align="left">~ 和 !~</td>
<td align="left">匹配正则表达式和不匹配正则表达式</td>
</tr>
<tr>
<td align="left">&lt; &lt;= &gt; &gt;= != ==</td>
<td align="left">关系运算符</td>
</tr>
<tr>
<td align="left">空格</td>
<td align="left">连接</td>
</tr>
<tr>
<td align="left">+ -</td>
<td align="left">加，减</td>
</tr>
<tr>
<td align="left">* / %</td>
<td align="left">乘，除与求余</td>
</tr>
<tr>
<td align="left">+ - !</td>
<td align="left">一元加，减和逻辑非</td>
</tr>
<tr>
<td align="left">^ ***</td>
<td align="left">求幂</td>
</tr>
<tr>
<td align="left">++ –</td>
<td align="left">增加或减少，作为前缀或后缀</td>
</tr>
<tr>
<td align="left">$</td>
<td align="left">字段引用</td>
</tr>
<tr>
<td align="left">in</td>
<td align="left">数组成员</td>
</tr>
</tbody></table>
<p>Demo文案</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Server ~]# cat demo.log</span><br><span class="line">小米 20 成都 172 60 女</span><br><span class="line">小张 21 杭州 182 79 男</span><br><span class="line">小文 19 长沙 178 70 男</span><br><span class="line">小紫 22 北京 168 50 女</span><br></pre></td></tr></table></figure>

<h4 id="输出指定位置的文档"><a href="#输出指定位置的文档" class="headerlink" title="输出指定位置的文档"></a>输出指定位置的文档</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Server ~]# cat demo.log |awk '&#123;print $1,$3,$5&#125;'</span><br><span class="line">小米 成都 60</span><br><span class="line">小张 杭州 79</span><br><span class="line">小文 长沙 70</span><br><span class="line">小紫 北京 50</span><br></pre></td></tr></table></figure>

<h4 id="指定分隔符输出文档"><a href="#指定分隔符输出文档" class="headerlink" title="指定分隔符输出文档"></a>指定分隔符输出文档</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 使用<span class="string">"1"</span>分割</span></span><br><span class="line">[root@Leonardo-iWzl-Server ~]# cat demo.log |awk -F 1 '&#123;print $1&#125;'</span><br><span class="line">小米 20 成都</span><br><span class="line">小张 2</span><br><span class="line">小文</span><br><span class="line">小紫 22 北京</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者使用内建变量</span></span><br><span class="line">[root@Leonardo-iWzl-Server ~]# cat demo.log |awk 'BEGIN&#123;FS='1'&#125; &#123;print $1&#125;'</span><br><span class="line">小米 20 成都</span><br><span class="line">小张 2</span><br><span class="line">小文</span><br><span class="line">小紫 22 北京</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用多个分隔符.先使用<span class="string">"1"</span>分割，然后对分割结果再使用<span class="string">"0"</span>分割</span></span><br><span class="line">[root@Leonardo-iWzl-Server ~]# cat demo.log |awk -F '[10]' '&#123;print $1&#125;'</span><br><span class="line">小米 2</span><br><span class="line">小张 2</span><br><span class="line">小文</span><br><span class="line">小紫 22 北京</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 或者使用内建变量</span></span><br><span class="line">[root@Leonardo-iWzl-Server ~]# cat demo.log |awk 'BEGIN&#123;FS="[10]"&#125; &#123;print $1&#125;'</span><br><span class="line">小米 2</span><br><span class="line">小张 2</span><br><span class="line">小文</span><br><span class="line">小紫 22 北京</span><br></pre></td></tr></table></figure>

<h4 id="设置计算参数并输出文档"><a href="#设置计算参数并输出文档" class="headerlink" title="设置计算参数并输出文档"></a>设置计算参数并输出文档</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">awk -v 设置变量</span></span><br><span class="line">[root@Leonardo-iWzl-Server ~]# cat demo.log |awk -v a=100 '&#123;print $1,$2,a-$2&#125;'</span><br><span class="line">小米 20 80</span><br><span class="line">小张 21 79</span><br><span class="line">小文 19 81</span><br><span class="line">小紫 22 78</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Liunx</tag>
        <tag>Tools</tag>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Trochilidae IOC&amp;DI的设计与实现</title>
    <url>/2020/11/13/Trochilidae-Core-Design-001/</url>
    <content><![CDATA[<p><strong>pom.xml</strong> 就像 Make 的 MakeFile、Ant 的 build.xml 一样，Maven 项目的核心是 pom.xml。POM( Project Object Model，项目对象模型 ) 定义了项目的基本信息，用于描述项目如何构建，声明项目依赖，等等。</p>
<p>在版本号的说明  :  SNAPSHOT – 快照版本，ALPHA – 内侧版本，BETA – 公测版本，RELEASE – 稳定版本，GA – 正式发布</p>
<a id="more"></a>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0</span></span></span><br><span class="line"><span class="tag"><span class="string">                      http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">&lt;!-- The Basics --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>...<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>...<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>...<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>...<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>...<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span>...<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span>...<span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modules</span>&gt;</span>...<span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>&gt;</span>...<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">&lt;!-- Build Settings --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span>...<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">reporting</span>&gt;</span>...<span class="tag">&lt;/<span class="name">reporting</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">&lt;!-- More Project Information --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>...<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>...<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>...<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">inceptionYear</span>&gt;</span>...<span class="tag">&lt;/<span class="name">inceptionYear</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">licenses</span>&gt;</span>...<span class="tag">&lt;/<span class="name">licenses</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">organization</span>&gt;</span>...<span class="tag">&lt;/<span class="name">organization</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">developers</span>&gt;</span>...<span class="tag">&lt;/<span class="name">developers</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">contributors</span>&gt;</span>...<span class="tag">&lt;/<span class="name">contributors</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">  <span class="comment">&lt;!-- Environment Settings --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">issueManagement</span>&gt;</span>...<span class="tag">&lt;/<span class="name">issueManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ciManagement</span>&gt;</span>...<span class="tag">&lt;/<span class="name">ciManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mailingLists</span>&gt;</span>...<span class="tag">&lt;/<span class="name">mailingLists</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">scm</span>&gt;</span>...<span class="tag">&lt;/<span class="name">scm</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">prerequisites</span>&gt;</span>...<span class="tag">&lt;/<span class="name">prerequisites</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">repositories</span>&gt;</span>...<span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span>...<span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span>...<span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">profiles</span>&gt;</span>...<span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span>     </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span>     </span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。 坐标包括group ID，artifact ID和 version。--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--被继承的父项目的构件标识符--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--被继承的父项目的全球唯一标识符--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--被继承的父项目的版本--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>/&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。Maven首先在构建当前项目的地方寻找父项 目的pom，其次在文件系统的这个位置（relativePath位置），然后在本地仓库，最后在远程仓库寻找父项目的pom。--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;/<span class="name">parent</span>&gt;</span>    </span><br><span class="line"> <span class="comment">&lt;!--声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。--&gt;</span>       </span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成， 如com.mycompany.app生成的相对路径为：/com/mycompany/app--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>asia.banseon<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!-- 构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID和groupID；在某个 特定的group ID下，artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源 码，二进制发布和WARs等。--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>banseon-maven2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--项目的名称, Maven产生的文档用--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>banseon-maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--项目主页的URL, Maven产生的文档用--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.baidu.com/banseon<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!-- 项目的详细描述, Maven 产生的文档用。  当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，就可以包含HTML标 签）， 不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的索引页文件，而不是调整这里的文档。--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>A maven project to study maven.<span class="tag">&lt;/<span class="name">description</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--描述了这个项目构建环境中的前提条件。--&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;<span class="name">prerequisites</span>&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--构建该项目或使用该插件所需要的Maven的最低版本--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">maven</span>/&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;/<span class="name">prerequisites</span>&gt;</span>    </span><br><span class="line"> <span class="comment">&lt;!--项目的问题管理系统(Bugzilla, Jira, Scarab,或任何你喜欢的问题管理系统)的名称和URL，本例为 jira--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">issueManagement</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--问题管理系统（例如jira）的名字，--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">system</span>&gt;</span>jira<span class="tag">&lt;/<span class="name">system</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--该项目使用的问题管理系统的URL--&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://jira.baidu.com/banseon<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">issueManagement</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--项目持续集成信息--&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;<span class="name">ciManagement</span>&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--持续集成系统的名字，例如continuum--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">system</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--该项目使用的持续集成系统的URL（如果持续集成系统有web接口的话）。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--构建完成时，需要通知的开发者/用户的配置项。包括被通知者信息和通知条件（错误，失败，成功，警告）--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">notifiers</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--配置一种方式，当构建中断时，以该方式通知用户/开发者--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">notifier</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--传送通知的途径--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">type</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--发生错误时是否通知--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">sendOnError</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--构建失败时是否通知--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">sendOnFailure</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--构建成功时是否通知--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">sendOnSuccess</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--发生警告时是否通知--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">sendOnWarning</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--不赞成使用。通知发送到哪里--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">address</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--扩展配置项--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">notifier</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">notifiers</span>&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;/<span class="name">ciManagement</span>&gt;</span>    </span><br><span class="line"> <span class="comment">&lt;!--项目创建年份，4位数字。当产生版权信息时需要使用这个值。--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">inceptionYear</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--项目相关邮件列表信息--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">mailingLists</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--该元素描述了项目相关的所有邮件列表。自动产生的网站引用这些信息。--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">mailingList</span>&gt;</span>     </span><br><span class="line">         <span class="comment">&lt;!--邮件的名称--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--发送邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&gt;</span>     </span><br><span class="line">            <span class="tag">&lt;<span class="name">post</span>&gt;</span>banseon@126.com<span class="tag">&lt;/<span class="name">post</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&gt;</span>     </span><br><span class="line">            <span class="tag">&lt;<span class="name">subscribe</span>&gt;</span>banseon@126.com<span class="tag">&lt;/<span class="name">subscribe</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--取消订阅邮件的地址或链接，如果是邮件地址，创建文档时，mailto: 链接会被自动创建--&gt;</span>     </span><br><span class="line">            <span class="tag">&lt;<span class="name">unsubscribe</span>&gt;</span>banseon@126.com<span class="tag">&lt;/<span class="name">unsubscribe</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--你可以浏览邮件信息的URL--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">archive</span>&gt;</span>http:/hi.baidu.com/banseon/demo/dev/<span class="tag">&lt;/<span class="name">archive</span>&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;/<span class="name">mailingList</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">mailingLists</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--项目开发者列表--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">developers</span>&gt;</span>     </span><br><span class="line">     <span class="comment">&lt;!--某个项目开发者的信息--&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">developer</span>&gt;</span>     </span><br><span class="line">         <span class="comment">&lt;!--SCM里项目开发者的唯一标识符--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>HELLO WORLD<span class="tag">&lt;/<span class="name">id</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--项目开发者的全名--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>banseon<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--项目开发者的email--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">email</span>&gt;</span>banseon@126.com<span class="tag">&lt;/<span class="name">email</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--项目开发者的主页的URL--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>/&gt;</span>    </span><br><span class="line">            <span class="comment">&lt;!--项目开发者在项目中扮演的角色，角色元素描述了各种角色--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">roles</span>&gt;</span>     </span><br><span class="line">                <span class="tag">&lt;<span class="name">role</span>&gt;</span>Project Manager<span class="tag">&lt;/<span class="name">role</span>&gt;</span>     </span><br><span class="line">                <span class="tag">&lt;<span class="name">role</span>&gt;</span>Architect<span class="tag">&lt;/<span class="name">role</span>&gt;</span>     </span><br><span class="line">            <span class="tag">&lt;/<span class="name">roles</span>&gt;</span>    </span><br><span class="line">            <span class="comment">&lt;!--项目开发者所属组织--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">organization</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">organization</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--项目开发者所属组织的URL--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">organizationUrl</span>&gt;</span>http://hi.baidu.com/banseon<span class="tag">&lt;/<span class="name">organizationUrl</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--项目开发者属性，如即时消息如何处理等--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">properties</span>&gt;</span>     </span><br><span class="line">                <span class="tag">&lt;<span class="name">dept</span>&gt;</span>No<span class="tag">&lt;/<span class="name">dept</span>&gt;</span>     </span><br><span class="line">            <span class="tag">&lt;/<span class="name">properties</span>&gt;</span>    </span><br><span class="line">            <span class="comment">&lt;!--项目开发者所在时区， -11到12范围内的整数。--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">timezone</span>&gt;</span>-5<span class="tag">&lt;/<span class="name">timezone</span>&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;/<span class="name">developer</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">developers</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--项目的其他贡献者列表--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">contributors</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--项目的其他贡献者。参见developers/developer元素--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">contributor</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>/&gt;</span><span class="tag">&lt;<span class="name">email</span>/&gt;</span><span class="tag">&lt;<span class="name">url</span>/&gt;</span><span class="tag">&lt;<span class="name">organization</span>/&gt;</span><span class="tag">&lt;<span class="name">organizationUrl</span>/&gt;</span><span class="tag">&lt;<span class="name">roles</span>/&gt;</span><span class="tag">&lt;<span class="name">timezone</span>/&gt;</span><span class="tag">&lt;<span class="name">properties</span>/&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">contributor</span>&gt;</span>         </span><br><span class="line">    <span class="tag">&lt;/<span class="name">contributors</span>&gt;</span>       </span><br><span class="line">    <span class="comment">&lt;!--该元素描述了项目所有License列表。 应该只列出该项目的license列表，不要列出依赖项目的 license列表。如果列出多个license，用户可以选择它们中的一个而不是接受所有license。--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">licenses</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--描述了项目的license，用于生成项目的web站点的license页面，其他一些报表和validation也会用到该元素。--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">license</span>&gt;</span>    </span><br><span class="line">         <span class="comment">&lt;!--license用于法律上的名称--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Apache 2<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--官方的license正文页面的URL--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.baidu.com/banseon/LICENSE-2.0.txt<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--项目分发的主要方式：    </span></span><br><span class="line"><span class="comment">              repo，可以从Maven库下载    </span></span><br><span class="line"><span class="comment">              manual， 用户必须手动下载和安装依赖--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">distribution</span>&gt;</span>repo<span class="tag">&lt;/<span class="name">distribution</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--关于license的补充信息--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">comments</span>&gt;</span>A business-friendly OSS license<span class="tag">&lt;/<span class="name">comments</span>&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;/<span class="name">license</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">licenses</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">scm</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">connection</span>&gt;</span>     </span><br><span class="line">            scm:svn:http://svn.baidu.com/banseon/maven/banseon/banseon-maven2-trunk(dao-trunk)      </span><br><span class="line">        <span class="tag">&lt;/<span class="name">connection</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--给开发者使用的，类似connection元素。即该连接不仅仅只读--&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">developerConnection</span>&gt;</span>     </span><br><span class="line">            scm:svn:http://svn.baidu.com/banseon/maven/banseon/dao-trunk      </span><br><span class="line">        <span class="tag">&lt;/<span class="name">developerConnection</span>&gt;</span>    </span><br><span class="line">        <span class="comment">&lt;!--当前代码的标签，在开发阶段默认为HEAD--&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">tag</span>/&gt;</span>           </span><br><span class="line">        <span class="comment">&lt;!--指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://svn.baidu.com/banseon<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">scm</span>&gt;</span>     </span><br><span class="line">    <span class="comment">&lt;!--描述项目所属组织的各种属性。Maven产生的文档用--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">organization</span>&gt;</span>     </span><br><span class="line">     <span class="comment">&lt;!--组织的全名--&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>demo<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </span><br><span class="line">        <span class="comment">&lt;!--组织主页的URL--&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.baidu.com/banseon<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">organization</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--构建项目需要的信息--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">sourceDirectory</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容 会被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">scriptSourceDirectory</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">testSourceDirectory</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--被编译过的应用程序class文件存放的目录。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--被编译过的测试class文件存放的目录。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">testOutputDirectory</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--使用来自该项目的一系列构建扩展--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">extensions</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--描述使用到的构建扩展。--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">extension</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--构建扩展的groupId--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--构建扩展的artifactId--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--构建扩展的版本--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>/&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">extension</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">extensions</span>&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--当项目没有规定目标（Maven2 叫做阶段）时的默认值--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">defaultGoal</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">resources</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--这个元素描述了项目相关或测试相关的所有资源路径--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">resource</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!-- 描述了资源的目标路径。该路径相对target/classes目录（例如$&#123;project.build.outputDirectory&#125;）。举个例 子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为org/apache/maven /messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">targetPath</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">filtering</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--描述存放资源的目录，该路径相对POM路径--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">directory</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--包含的模式列表，例如**/*.xml.--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">includes</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--排除的模式列表，例如**/*.xml--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">resource</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">resources</span>&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">testResources</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--这个元素描述了测试相关的所有资源路径，参见build/resources/resource元素的说明--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">testResource</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">targetPath</span>/&gt;</span><span class="tag">&lt;<span class="name">filtering</span>/&gt;</span><span class="tag">&lt;<span class="name">directory</span>/&gt;</span><span class="tag">&lt;<span class="name">includes</span>/&gt;</span><span class="tag">&lt;<span class="name">excludes</span>/&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">testResource</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">testResources</span>&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--构建产生的所有文件存放的目录--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">directory</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--产生的构件的文件名，默认值是$&#123;artifactId&#125;-$&#123;version&#125;。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">finalName</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--当filtering开关打开时，使用到的过滤器属性文件列表--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">filters</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--使用的插件列表 。--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">plugins</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--plugin元素包含描述插件所需要的信息。--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--插件在仓库里的group ID--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--插件在仓库里的artifact ID--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--被使用的插件的版本（或版本范围）--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>/&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该元素才被设置成enabled。--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">extensions</span>/&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">executions</span>&gt;</span>    </span><br><span class="line">      <span class="comment">&lt;!--execution元素包含了插件执行需要的信息--&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">execution</span>&gt;</span>    </span><br><span class="line">       <span class="comment">&lt;!--执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标--&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;<span class="name">id</span>/&gt;</span>    </span><br><span class="line">       <span class="comment">&lt;!--绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段--&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;<span class="name">phase</span>/&gt;</span>    </span><br><span class="line">       <span class="comment">&lt;!--配置的执行目标--&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;<span class="name">goals</span>/&gt;</span>    </span><br><span class="line">       <span class="comment">&lt;!--配置是否被传播到子POM--&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;<span class="name">inherited</span>/&gt;</span>    </span><br><span class="line">       <span class="comment">&lt;!--作为DOM对象的配置--&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;/<span class="name">execution</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--项目引入插件所需要的额外依赖--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">      <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">       ......    </span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>         </span><br><span class="line">     <span class="comment">&lt;!--任何配置是否被传播到子项目--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">inherited</span>/&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--作为DOM对象的配置--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--使用的插件列表--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span><span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span><span class="tag">&lt;<span class="name">version</span>/&gt;</span><span class="tag">&lt;<span class="name">extensions</span>/&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">executions</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">execution</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>/&gt;</span><span class="tag">&lt;<span class="name">phase</span>/&gt;</span><span class="tag">&lt;<span class="name">goals</span>/&gt;</span><span class="tag">&lt;<span class="name">inherited</span>/&gt;</span><span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">execution</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">      ......    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">goals</span>/&gt;</span><span class="tag">&lt;<span class="name">inherited</span>/&gt;</span><span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;/<span class="name">build</span>&gt;</span>    </span><br><span class="line"> <span class="comment">&lt;!--在列的项目构建profile，如果被激活，会修改构建处理--&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;<span class="name">profiles</span>&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--根据环境参数或命令行参数激活某个构建处理--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">profile</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">id</span>/&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--自动触发profile的条件逻辑。Activation是profile的开启钥匙。profile的力量来自于它    </span></span><br><span class="line"><span class="comment">   能够在某些特定的环境中自动使用某些特定的值；这些环境通过activation元素指定。activation元素并不是激活profile的唯一方式。--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">activation</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--profile默认是否激活的标志--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">activeByDefault</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--当匹配的jdk被检测到，profile被激活。例如，1.4激活JDK1.4，1.4.0_2，而!1.4激活所有版本不是以1.4开头的JDK。--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">jdk</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--当匹配的操作系统属性被检测到，profile被激活。os元素可以定义一些操作系统相关的属性。--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">os</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--激活profile的操作系统的名字--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">name</span>&gt;</span>Windows XP<span class="tag">&lt;/<span class="name">name</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--激活profile的操作系统所属家族(如 'windows')--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">family</span>&gt;</span>Windows<span class="tag">&lt;/<span class="name">family</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--激活profile的操作系统体系结构 --&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">arch</span>&gt;</span>x86<span class="tag">&lt;/<span class="name">arch</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--激活profile的操作系统版本--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.2600<span class="tag">&lt;/<span class="name">version</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">os</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--如果Maven检测到某一个属性（其值可以在POM中通过$&#123;名称&#125;引用），其拥有对应的名称和值，Profile就会被激活。如果值    </span></span><br><span class="line"><span class="comment">    字段是空的，那么存在属性名称字段就会激活profile，否则按区分大小写方式匹配属性值字段--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--激活profile的属性的名称--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">name</span>&gt;</span>mavenVersion<span class="tag">&lt;/<span class="name">name</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--激活profile的属性的值--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">value</span>&gt;</span>2.0.3<span class="tag">&lt;/<span class="name">value</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--提供一个文件名，通过检测该文件的存在或不存在来激活profile。missing检查文件是否存在，如果不存在则激活    </span></span><br><span class="line"><span class="comment">    profile。另一方面，exists则会检查文件是否存在，如果存在则激活profile。--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">file</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--如果指定的文件存在，则激活profile。--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">exists</span>&gt;</span>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/<span class="tag">&lt;/<span class="name">exists</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--如果指定的文件不存在，则激活profile。--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">missing</span>&gt;</span>/usr/local/hudson/hudson-home/jobs/maven-guide-zh-to-production/workspace/<span class="tag">&lt;/<span class="name">missing</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">file</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">activation</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--构建项目所需要的信息。参见build元素--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">build</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultGoal</span>/&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">resource</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">targetPath</span>/&gt;</span><span class="tag">&lt;<span class="name">filtering</span>/&gt;</span><span class="tag">&lt;<span class="name">directory</span>/&gt;</span><span class="tag">&lt;<span class="name">includes</span>/&gt;</span><span class="tag">&lt;<span class="name">excludes</span>/&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">resource</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">testResources</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">testResource</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">targetPath</span>/&gt;</span><span class="tag">&lt;<span class="name">filtering</span>/&gt;</span><span class="tag">&lt;<span class="name">directory</span>/&gt;</span><span class="tag">&lt;<span class="name">includes</span>/&gt;</span><span class="tag">&lt;<span class="name">excludes</span>/&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">testResource</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">testResources</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">directory</span>/&gt;</span><span class="tag">&lt;<span class="name">finalName</span>/&gt;</span><span class="tag">&lt;<span class="name">filters</span>/&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">plugins</span>&gt;</span>    </span><br><span class="line">      <span class="comment">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span><span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span><span class="tag">&lt;<span class="name">version</span>/&gt;</span><span class="tag">&lt;<span class="name">extensions</span>/&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;<span class="name">executions</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">execution</span>&gt;</span>    </span><br><span class="line">         <span class="tag">&lt;<span class="name">id</span>/&gt;</span><span class="tag">&lt;<span class="name">phase</span>/&gt;</span><span class="tag">&lt;<span class="name">goals</span>/&gt;</span><span class="tag">&lt;<span class="name">inherited</span>/&gt;</span><span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;/<span class="name">execution</span>&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">        <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">         ......    </span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;<span class="name">goals</span>/&gt;</span><span class="tag">&lt;<span class="name">inherited</span>/&gt;</span><span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span><span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span><span class="tag">&lt;<span class="name">version</span>/&gt;</span><span class="tag">&lt;<span class="name">extensions</span>/&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">executions</span>&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;<span class="name">execution</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>/&gt;</span><span class="tag">&lt;<span class="name">phase</span>/&gt;</span><span class="tag">&lt;<span class="name">goals</span>/&gt;</span><span class="tag">&lt;<span class="name">inherited</span>/&gt;</span><span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;/<span class="name">execution</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">       <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">        ......    </span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">goals</span>/&gt;</span><span class="tag">&lt;<span class="name">inherited</span>/&gt;</span><span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">build</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">modules</span>/&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--发现依赖和扩展的远程仓库列表。--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">repositories</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--参见repositories/repository元素--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">releases</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span><span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span><span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">releases</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span><span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span><span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">id</span>/&gt;</span><span class="tag">&lt;<span class="name">name</span>/&gt;</span><span class="tag">&lt;<span class="name">url</span>/&gt;</span><span class="tag">&lt;<span class="name">layout</span>/&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--发现插件的远程仓库列表，这些插件用于构建和报表--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">releases</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span><span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span><span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">releases</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span><span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span><span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">id</span>/&gt;</span><span class="tag">&lt;<span class="name">name</span>/&gt;</span><span class="tag">&lt;<span class="name">url</span>/&gt;</span><span class="tag">&lt;<span class="name">layout</span>/&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">     ......    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--不赞成使用. 现在Maven忽略该元素.--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">reports</span>/&gt;</span>       </span><br><span class="line">   <span class="comment">&lt;!--该元素包括使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。参见reporting元素--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">reporting</span>&gt;</span>    </span><br><span class="line">    ......    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">reporting</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--参见dependencyManagement元素--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">      ......    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--参见distributionManagement元素--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span>    </span><br><span class="line">    ......    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--参见properties元素--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">properties</span>/&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">profile</span>&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;/<span class="name">profiles</span>&gt;</span>    </span><br><span class="line"> <span class="comment">&lt;!--模块（有时称作子项目） 被构建成项目的一部分。列出的每个模块元素是指向该模块的目录的相对路径--&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;<span class="name">modules</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--发现依赖和扩展的远程仓库列表。--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">repositories</span>&gt;</span>     </span><br><span class="line">     <span class="comment">&lt;!--包含需要连接到远程仓库的信息--&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span>    </span><br><span class="line">         <span class="comment">&lt;!--如何处理远程仓库里发布版本的下载--&gt;</span>    </span><br><span class="line">         <span class="tag">&lt;<span class="name">releases</span>&gt;</span>    </span><br><span class="line">          <span class="comment">&lt;!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">releases</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!-- 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的 策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories/repository/releases元素 --&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span><span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span><span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">id</span>&gt;</span>banseon-repository-proxy<span class="tag">&lt;/<span class="name">id</span>&gt;</span>     </span><br><span class="line">   <span class="comment">&lt;!--远程仓库名称--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>banseon-repository-proxy<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--远程仓库URL，按protocol://hostname/path形式--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.1.169:9999/repository/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!-- 用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然 而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span>               </span><br><span class="line">        <span class="tag">&lt;/<span class="name">repository</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--发现插件的远程仓库列表，这些插件用于构建和报表--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span>    </span><br><span class="line">   ......    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span>    </span><br><span class="line">       </span><br><span class="line">    <span class="comment">&lt;!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--依赖的group ID--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--依赖的artifact ID--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-artifact<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。类型经常和使用的打包方式对应， 尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。如果设置extensions为 true，就可以在 plugin里定义新的类型。所以前面的类型的例子不完整。--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span>    </span><br><span class="line">            <span class="comment">&lt;!-- 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，如果你想要构建两个单独的构件成 JAR，一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生成两个单独的JAR构件。--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">classifier</span>&gt;</span><span class="tag">&lt;/<span class="name">classifier</span>&gt;</span>    </span><br><span class="line">            <span class="comment">&lt;!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。    </span></span><br><span class="line"><span class="comment">                - compile ：默认范围，用于编译      </span></span><br><span class="line"><span class="comment">                - provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath      </span></span><br><span class="line"><span class="comment">                - runtime: 在执行时需要使用      </span></span><br><span class="line"><span class="comment">                - test:    用于test任务时使用      </span></span><br><span class="line"><span class="comment">                - system: 需要外在提供相应的元素。通过systemPath来取得      </span></span><br><span class="line"><span class="comment">                - systemPath: 仅用于范围为system。提供相应的路径      </span></span><br><span class="line"><span class="comment">                - optional:   当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用--&gt;</span>     </span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span>       </span><br><span class="line">            <span class="comment">&lt;!--仅供system范围使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如$&#123;java.home&#125;。--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">systemPath</span>&gt;</span><span class="tag">&lt;/<span class="name">systemPath</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的依赖。此元素主要用于解决版本冲突问题--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span>    </span><br><span class="line">             <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span>     </span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>     </span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>     </span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span>     </span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span>       </span><br><span class="line">            <span class="comment">&lt;!--可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。可选依赖阻断依赖的传递性。--&gt;</span>     </span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--不赞成使用. 现在Maven忽略该元素.--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">reports</span>&gt;</span><span class="tag">&lt;/<span class="name">reports</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--该元素描述使用报表插件产生报表的规范。当用户执行“mvn site”，这些报表就会运行。 在页面导航栏能看到所有报表的链接。--&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;<span class="name">reporting</span>&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--true，则，网站不包括默认的报表。这包括“项目信息”菜单中的报表。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">excludeDefaults</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--所有产生的报表存放到哪里。默认值是$&#123;project.build.directory&#125;/site。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--使用的报表插件和他们的配置。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">plugins</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--plugin元素包含描述报表插件需要的信息--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">plugin</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--报表插件在仓库里的group ID--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--报表插件在仓库里的artifact ID--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--被使用的报表插件的版本（或版本范围）--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--任何配置是否被传播到子项目--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">inherited</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--报表插件的配置--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--一组报表的多重规范，每个规范可能有不同的配置。一个规范（报表集）对应一个执行目标 。例如，有1，2，3，4，5，6，7，8，9个报表。1，2，5构成A报表集，对应一个执行目标。2，5，8构成B报表集，对应另一个执行目标--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">reportSets</span>&gt;</span>    </span><br><span class="line">     <span class="comment">&lt;!--表示报表的一个集合，以及产生该集合的配置--&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;<span class="name">reportSet</span>&gt;</span>    </span><br><span class="line">      <span class="comment">&lt;!--报表集合的唯一标识符，POM继承时用到--&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>/&gt;</span>    </span><br><span class="line">      <span class="comment">&lt;!--产生报表集合时，被使用的报表的配置--&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span>    </span><br><span class="line">      <span class="comment">&lt;!--配置是否被继承到子POMs--&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">inherited</span>/&gt;</span>    </span><br><span class="line">      <span class="comment">&lt;!--这个集合里使用到哪些报表--&gt;</span>    </span><br><span class="line">      <span class="tag">&lt;<span class="name">reports</span>/&gt;</span>    </span><br><span class="line">     <span class="tag">&lt;/<span class="name">reportSet</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">reportSets</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;/<span class="name">reporting</span>&gt;</span>    </span><br><span class="line"> <span class="comment">&lt;!-- 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖（必须描述group ID和 artifact ID信息），如果group ID和artifact ID以外的一些信息没有描述，则通过group ID和artifact ID 匹配到这里的依赖，并使用这里的依赖信息。--&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">    ......    </span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>    </span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span>       </span><br><span class="line">    <span class="comment">&lt;!--项目分发信息，在执行mvn deploy后表示要发布的位置。有了这些信息就可以把网站部署到远程服务器或者把构件部署到远程仓库。--&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span>    </span><br><span class="line">        <span class="comment">&lt;!--部署项目产生的构件到远程仓库需要的信息--&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">repository</span>&gt;</span>    </span><br><span class="line">         <span class="comment">&lt;!--是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见repositories/repository元素--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">uniqueVersion</span>/&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">id</span>&gt;</span>banseon-maven2<span class="tag">&lt;/<span class="name">id</span>&gt;</span>     </span><br><span class="line">   <span class="tag">&lt;<span class="name">name</span>&gt;</span>banseon maven2<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>file://$&#123;basedir&#125;/target/deploy<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span>/&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">repository</span>&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见distributionManagement/repository元素--&gt;</span>     </span><br><span class="line">  <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">uniqueVersion</span>/&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">id</span>&gt;</span>banseon-maven2<span class="tag">&lt;/<span class="name">id</span>&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Banseon-maven2 Snapshot Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>scp://svn.baidu.com/banseon:/usr/local/maven-snapshot<span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </span><br><span class="line">   <span class="tag">&lt;<span class="name">layout</span>/&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--部署项目的网站需要的信息--&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;<span class="name">site</span>&gt;</span>    </span><br><span class="line">         <span class="comment">&lt;!--部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置--&gt;</span>     </span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>banseon-site<span class="tag">&lt;/<span class="name">id</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--部署位置的名称--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>business api website<span class="tag">&lt;/<span class="name">name</span>&gt;</span>     </span><br><span class="line">            <span class="comment">&lt;!--部署位置的URL，按protocol://hostname/path形式--&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>     </span><br><span class="line">                scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web      </span><br><span class="line">            <span class="tag">&lt;/<span class="name">url</span>&gt;</span>     </span><br><span class="line">        <span class="tag">&lt;/<span class="name">site</span>&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位那些不在仓库里的构件（由于license限制）。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">downloadUrl</span>/&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!--如果构件有了新的group ID和artifact ID（构件移到了新的位置），这里列出构件的重定位信息。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">relocation</span>&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--构件新的group ID--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--构件新的artifact ID--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--构件新的版本号--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>/&gt;</span>    </span><br><span class="line">   <span class="comment">&lt;!--显示给用户的，关于移动的额外信息，例如原因。--&gt;</span>    </span><br><span class="line">   <span class="tag">&lt;<span class="name">message</span>/&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">relocation</span>&gt;</span>    </span><br><span class="line">  <span class="comment">&lt;!-- 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值有：none（默认），converted（仓库管理员从 Maven 1 POM转换过来），partner（直接从伙伴Maven 2仓库同步过来），deployed（从Maven 2实例部 署），verified（被核实时正确的和最终的）。--&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">status</span>/&gt;</span>           </span><br><span class="line">    <span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span>    </span><br><span class="line">    <span class="comment">&lt;!--以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里activation元素的说明）。格式是&lt;name&gt;value&lt;/name&gt;。--&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>/&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>maven</category>
      </categories>
      <tags>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins在CentOS系统环境上的搭建和部署</title>
    <url>/2020/07/23/Jenkins-programming-environment-setup/</url>
    <content><![CDATA[<h3 id="Jenkins服务在CentOS系统环境上的搭建和部署"><a href="#Jenkins服务在CentOS系统环境上的搭建和部署" class="headerlink" title="Jenkins服务在CentOS系统环境上的搭建和部署"></a>Jenkins服务在CentOS系统环境上的搭建和部署</h3><blockquote>
<p><a href="https://www.jenkins.io/zh/" target="_blank" rel="noopener">Jenkins</a> 由Java编写的一个开源的、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的），主要用于持续、自动的构建/测试软件项目、监控外部任务的运行（这个比较抽象，暂且写上，不做解释）。Jenkins用Java语言编写，可在Tomcat等流行的servlet容器中运行，也可独立运行。通常与版本管理工具(SCM)、构建工具结合使用。常用的版本控制工具有SVN、GIT，构建工具有Maven、Ant、Gradle。</p>
</blockquote>
<a id="more"></a>  

<p>CI(Continuous integration，中文意思是持续集成)是一种软件开发时间。持续集成强调开发人员提交了新代码之后，立刻进行构建、（单元）测试。根据测试结果，我们可以确定新代码和原有代码能否正确地集成在一起。借用网络图片对CI加以理解。</p>
<p><img src="http://img.upuphub.com/6464255-1b6e3bfdbece1492.jpg" alt="CI"></p>
<p> CD(Continuous Delivery， 中文意思持续交付)是在持续集成的基础上，将集成后的代码部署到更贴近真实运行环境(类生产环境)中。比如，我们完成单元测试后，可以把代码部署到连接数据库的Staging环境中更多的测试。如果代码没有问题，可以继续手动部署到生产环境。下图反应的是CI/CD 的大概工作模式。</p>
<p><img src="http://img.upuphub.com/6464255-ba088ec7257062c0.jpg" alt="Jenkins"></p>
<!-- more -->

<h2 id="在线安装Jenkins"><a href="#在线安装Jenkins" class="headerlink" title="在线安装Jenkins"></a>在线安装Jenkins</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获取 repo</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取key, 如果之前导入 jenkins 的key, 这一步可以忽略</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key</span></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum update &amp;&amp; yum install jenkins</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启用 jenkins</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl start jenkins</span></span><br></pre></td></tr></table></figure>

<h2 id="离线安装Jenkins"><a href="#离线安装Jenkins" class="headerlink" title="离线安装Jenkins"></a>离线安装Jenkins</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 准备安装临时文件夹</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir jenkins</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> jenkins</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取最新的稳定版本的Jenkins.rpm文件(https://pkg.jenkins.io/redhat-stable/)</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> wget https://pkg.jenkins.io/redhat-stable/jenkins-2.235.2-1.1.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 执行本地的Yum安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum localinstall jenkins-2.235.2-1.1.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启用 jenkins</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl start jenkins</span></span><br></pre></td></tr></table></figure>

<h2 id="安装异常解决"><a href="#安装异常解决" class="headerlink" title="安装异常解决"></a>安装异常解决</h2><h3 id="异常信息如下"><a href="#异常信息如下" class="headerlink" title="异常信息如下"></a>异常信息如下</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Server jenkins]# systemctl start jenkins</span><br><span class="line">Job for jenkins.service failed because the control process exited with error code. See "systemctl status jenkins.service" and "journalctl -xe" for details.</span><br><span class="line">[root@Leonardo-iWzl-Server jenkins]# systemctl status jenkins</span><br><span class="line">● jenkins.service - LSB: Jenkins Automation Server</span><br><span class="line">   Loaded: loaded (/etc/rc.d/init.d/jenkins; bad; vendor preset: disabled)</span><br><span class="line">   Active: failed (Result: exit-code) since 四 2020-07-23 10:02:43 EDT; 16s ago</span><br><span class="line">     Docs: man:systemd-sysv-generator(8)</span><br><span class="line">  Process: 23582 ExecStart=/etc/rc.d/init.d/jenkins start (code=exited, status=1/FAILURE)</span><br><span class="line"></span><br><span class="line">7月 23 10:02:43 Leonardo-iWzl-Server systemd[1]: Starting LSB: Jenkins Automation Server...</span><br><span class="line">7月 23 10:02:43 Leonardo-iWzl-Server runuser[23587]: pam_unix(runuser:session): session opened for user jenkins...d=0)</span><br><span class="line">7月 23 10:02:43 Leonardo-iWzl-Server jenkins[23582]: Starting Jenkins bash: /usr/bin/java: No such file or directory</span><br><span class="line">7月 23 10:02:43 Leonardo-iWzl-Server runuser[23587]: pam_unix(runuser:session): session closed for user jenkins</span><br><span class="line">7月 23 10:02:43 Leonardo-iWzl-Server jenkins[23582]: [FAILED]</span><br><span class="line">7月 23 10:02:43 Leonardo-iWzl-Server systemd[1]: jenkins.service: control process exited, code=exited status=1</span><br><span class="line">7月 23 10:02:43 Leonardo-iWzl-Server systemd[1]: Failed to start LSB: Jenkins Automation Server.</span><br><span class="line">7月 23 10:02:43 Leonardo-iWzl-Server systemd[1]: Unit jenkins.service entered failed state.</span><br><span class="line">7月 23 10:02:43 Leonardo-iWzl-Server systemd[1]: jenkins.service failed.</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show in full.</span><br></pre></td></tr></table></figure>

<h3 id="原因说明"><a href="#原因说明" class="headerlink" title="原因说明"></a>原因说明</h3><p>Jenkins 默认会在以下目录按顺序搜寻 JDK，一旦找到一个可用的即返回</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/etc/alternatives/java</span><br><span class="line">/usr/lib/jvm/java-1.8.0/bin/java</span><br><span class="line">/usr/lib/jvm/jre-1.8.0/bin/java</span><br><span class="line">/usr/lib/jvm/java-1.7.0/bin/java</span><br><span class="line">/usr/lib/jvm/jre-1.7.0/bin/java</span><br><span class="line">/usr/lib/jvm/java-11.0/bin/java</span><br><span class="line">/usr/lib/jvm/jre-11.0/bin/java</span><br><span class="line">/usr/lib/jvm/java-11-openjdk-amd64</span><br><span class="line">/usr/bin/java</span><br></pre></td></tr></table></figure>

<p>如果系统的以上位置都未安装 JDK，启动时就会报错，可以通过建立软连接进行解决</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln -s /usr/local/java/jdk1.8.0_261/bin/java /usr/bin/java</span><br></pre></td></tr></table></figure>

<p>完成以上错误处理后,可得到以下输出</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Server jenkins]# systemctl status jenkins</span><br><span class="line">● jenkins.service - LSB: Jenkins Automation Server</span><br><span class="line">   Loaded: loaded (/etc/rc.d/init.d/jenkins; bad; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since 四 2020-07-23 10:10:06 EDT; 4s ago</span><br><span class="line">     Docs: man:systemd-sysv-generator(8)</span><br><span class="line">  Process: 23606 ExecStart=/etc/rc.d/init.d/jenkins start (code=exited, status=0/SUCCESS)</span><br><span class="line">   CGroup: /system.slice/jenkins.service</span><br><span class="line">           └─23630 /usr/bin/java -Dcom.sun.akuma.Daemon=daemonized -Djava.awt.headless=true -DJENKINS_HOME=/var/lib/jenkins -jar /usr/lib/jenkins/jenkins.war --logfile=/var/log/jenkins/jenkins.log --webroot=/var/cache/jenkins/war --dae...</span><br><span class="line"></span><br><span class="line">7月 23 10:10:04 Leonardo-iWzl-Server systemd[1]: Starting LSB: Jenkins Automation Server...</span><br><span class="line">7月 23 10:10:04 Leonardo-iWzl-Server runuser[23611]: pam_unix(runuser:session): session opened for user jenkins by (uid=0)</span><br><span class="line">7月 23 10:10:06 Leonardo-iWzl-Server runuser[23611]: pam_unix(runuser:session): session closed for user jenkins</span><br><span class="line">7月 23 10:10:06 Leonardo-iWzl-Server jenkins[23606]: Starting Jenkins [  OK  ]</span><br><span class="line">7月 23 10:10:06 Leonardo-iWzl-Server systemd[1]: Started LSB: Jenkins Automation Server.</span><br></pre></td></tr></table></figure>

<p> 查看jenkins 的启动参数 <em>ps -ef |grep jenkins</em> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@Leonardo-iWzl-Server jenkins]# ps -ef |grep jenkins</span><br><span class="line">jenkins  23630     1 49 10:10 ?        00:00:54 /usr/bin/java </span><br><span class="line">		-Dcom.sun.akuma.Daemon=daemonized </span><br><span class="line">		-Djava.awt.headless=true </span><br><span class="line">		-DJENKINS_HOME=/var/lib/jenkins </span><br><span class="line">		-jar /usr/lib/jenkins/jenkins.war </span><br><span class="line">		--logfile=/var/log/jenkins/jenkins.log </span><br><span class="line">		--webroot=/var/cache/jenkins/war </span><br><span class="line">		--daemon </span><br><span class="line">		--httpPort=8080 </span><br><span class="line">		--debug=5 </span><br><span class="line">		--handlerCountMax=100 </span><br><span class="line">		--handlerCountMaxIdle=20</span><br><span class="line">root     23695 23312  0 10:11 pts/0    00:00:00 grep --color=auto jenkins</span><br></pre></td></tr></table></figure>

<p>在这里看到日志的一些配置和相关的端口、可以通过访问<em>「IP」:8080</em>访问到Jenkins服务</p>
<h3 id="Jenkins的更新"><a href="#Jenkins的更新" class="headerlink" title="Jenkins的更新"></a>Jenkins的更新</h3><p>对于Jenkins更新可以通过</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum update jenkins</span><br></pre></td></tr></table></figure>

<p>完成更新后,需要重启Jenkins服务</p>
<h3 id="Jenkins国内镜像配置"><a href="#Jenkins国内镜像配置" class="headerlink" title="Jenkins国内镜像配置"></a>Jenkins国内镜像配置</h3><p>修改<em>/var/lib/jenkins</em> 目录下的<em>hudson.model.UpdateCenter.xml</em>文件内容如下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.1' encoding='UTF-8'?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">sites</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">site</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>default<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;url&gt;https://updates.jenkins.io/update-center.json&lt;/url&gt;--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">url</span>&gt;</span>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json/url&gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">site</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sites</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>修改默认配置json文件<em>/var/lib/jenkins/updates/default.json</em></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 进入响应文件夹</span></span><br><span class="line">cd /var/lib/jenkins/updates</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 备份原始文件</span></span><br><span class="line">cp default.json default.json.bak</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 替换更新下载地址</span></span><br><span class="line">sed -i 's/http:\/\/updates.jenkins-ci.org\/download/https:\/\/mirrors.tuna.tsinghua.edu.cn\/jenkins/g' default.json</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 替换测试URL</span></span><br><span class="line">sed -i 's/http:\/\/www.google.com/https:\/\/www.baidu.com/g' default.json</span><br></pre></td></tr></table></figure>

<p>完成以后重启Jenkins服务</p>
<h3 id="配置Jenkins服务"><a href="#配置Jenkins服务" class="headerlink" title="配置Jenkins服务"></a>配置Jenkins服务</h3><p>之后按提示和Jenkins可视化引导完成剩余的Jenkins环境的搭建部署</p>
<h2 id="Jenkins的结构导图"><a href="#Jenkins的结构导图" class="headerlink" title="Jenkins的结构导图"></a>Jenkins的结构导图</h2><p><img src="http://img.upuphub.com/6464255-cc56d3af1fdd96df.png" alt="Jenkins"></p>
<hr>
<h2 id="参考和引用"><a href="#参考和引用" class="headerlink" title="参考和引用"></a>参考和引用</h2><p><a href="https://www.jianshu.com/p/5f671aca2b5a" target="_blank" rel="noopener">哥本哈根月光-Jenkins详细教程</a></p>
<p><a href="https://halo.sherlocky.com/archives/jenkins" target="_blank" rel="noopener">CentOS 安装 Jenkins 及 国内下载加速</a></p>
]]></content>
      <categories>
        <category>DevOps</category>
      </categories>
      <tags>
        <tag>DevOps</tag>
        <tag>Liunx</tag>
        <tag>Jenkins</tag>
        <tag>CentOS</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS下Nginx支持SSL协议的编译安装</title>
    <url>/2020/07/04/Nginx-under-CentOS-installation/</url>
    <content><![CDATA[<h2 id="Nginx及其衍生的其他相关优秀开源产品"><a href="#Nginx及其衍生的其他相关优秀开源产品" class="headerlink" title="Nginx及其衍生的其他相关优秀开源产品"></a>Nginx及其衍生的其他相关优秀开源产品</h2><ul>
<li><a href="http://nginx.org/" target="_blank" rel="noopener">NGINX</a> 是开源、高性能、高可靠的 Web 和反向代理服务器</li>
<li><a href="https://tengine.taobao.org/" target="_blank" rel="noopener">Tengine</a> Tengine是由淘宝网发起基于Nginx的Web服务器项目</li>
<li><a href="https://openresty.org/cn/" target="_blank" rel="noopener">OpenResty</a> OpenResty® 是一个基于 Nginx 与 Lua 的高性能 Web 平台</li>
</ul>
<h2 id="下载Nginx稳定版包并解压"><a href="#下载Nginx稳定版包并解压" class="headerlink" title="下载Nginx稳定版包并解压"></a>下载Nginx稳定版包并解压</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-x.x.x.tar.gz</span><br><span class="line">tar zxvf nginx-x.x.x.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-x.x.x</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h2 id="补全需要的库依赖"><a href="#补全需要的库依赖" class="headerlink" title="补全需要的库依赖"></a>补全需要的库依赖</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install gcc-c++</span><br><span class="line">yum install -y pcre pcre-devel</span><br><span class="line">yum install -y zlib zlib-devel</span><br><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure>

<h2 id="执行编译安装"><a href="#执行编译安装" class="headerlink" title="执行编译安装"></a>执行编译安装</h2><p>所有文件放在同一个位置,便于统一管理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/nginx  \</span><br><span class="line">--conf-path=/usr/<span class="built_in">local</span>/nginx/etc/nginx.conf  \</span><br><span class="line">--user=nginx --group=nginx  \</span><br><span class="line">--error-log-path=/usr/<span class="built_in">local</span>/nginx/nginxlog/error.log  \</span><br><span class="line">--http-log-path=/usr/<span class="built_in">local</span>/nginx/nginxlog/access.log  \</span><br><span class="line">--pid-path=/usr/<span class="built_in">local</span>/nginx/pids/nginx.pid  \</span><br><span class="line">--lock-path=/usr/<span class="built_in">local</span>/nginx/locks/nginx.lock  \</span><br><span class="line">--with-http_ssl_module  \</span><br><span class="line">--with-http_stub_status_module  \</span><br><span class="line">--with-http_gzip_static_module  \</span><br><span class="line">--http-client-body-temp-path=/usr/<span class="built_in">local</span>/nginx/tmp/client  \</span><br><span class="line">--http-proxy-temp-path=/usr/<span class="built_in">local</span>/nginx/tmp/proxy  \</span><br><span class="line">--http-fastcgi-temp-path=/usr/<span class="built_in">local</span>/nginx/tmp/fastcgi  \</span><br><span class="line">--http-uwsgi-temp-path=/usr/<span class="built_in">local</span>/nginx/tmp/uwsgi  \</span><br><span class="line">--http-scgi-temp-path=/usr/<span class="built_in">local</span>/nginx/tmp/scgi</span><br></pre></td></tr></table></figure>
<p>编译结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Configuration summary</span><br><span class="line">  + using system PCRE library</span><br><span class="line">  + using system OpenSSL library</span><br><span class="line">  + using system zlib library</span><br><span class="line"></span><br><span class="line">  nginx path prefix: <span class="string">"/usr/local/nginx"</span></span><br><span class="line">  nginx binary file: <span class="string">"/usr/local/nginx/sbin/nginx"</span></span><br><span class="line">  nginx modules path: <span class="string">"/usr/local/nginx/modules"</span></span><br><span class="line">  nginx configuration prefix: <span class="string">"/usr/local/nginx/etc"</span></span><br><span class="line">  nginx configuration file: <span class="string">"/usr/local/nginx/etc/nginx.conf"</span></span><br><span class="line">  nginx pid file: <span class="string">"/usr/local/nginx/pids/nginx.pid"</span></span><br><span class="line">  nginx error <span class="built_in">log</span> file: <span class="string">"/usr/local/nginx/nginxlog/error.log"</span></span><br><span class="line">  nginx http access <span class="built_in">log</span> file: <span class="string">"/usr/local/nginx/nginxlog/access.log"</span></span><br><span class="line">  nginx http client request body temporary files: <span class="string">"/usr/local/nginx/tmp/client"</span></span><br><span class="line">  nginx http proxy temporary files: <span class="string">"/usr/local/nginx/tmp/proxy"</span></span><br><span class="line">  nginx http fastcgi temporary files: <span class="string">"/usr/local/nginx/tmp/fastcgi"</span></span><br><span class="line">  nginx http uwsgi temporary files: <span class="string">"/usr/local/nginx/tmp/uwsgi"</span></span><br><span class="line">  nginx http scgi temporary files: <span class="string">"/usr/local/nginx/tmp/scgi</span></span><br></pre></td></tr></table></figure>
<p>执行安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>
<h2 id="安装后处理"><a href="#安装后处理" class="headerlink" title="安装后处理"></a>安装后处理</h2><p>查看文件结构</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/</span><br><span class="line">tree</span><br><span class="line">.</span><br><span class="line">├── etc</span><br><span class="line">│   ├── fastcgi.conf</span><br><span class="line">│   ├── fastcgi.conf.default</span><br><span class="line">│   ├── fastcgi_params</span><br><span class="line">│   ├── fastcgi_params.default</span><br><span class="line">│   ├── koi-utf</span><br><span class="line">│   ├── koi-win</span><br><span class="line">│   ├── mime.types</span><br><span class="line">│   ├── mime.types.default</span><br><span class="line">│   ├── nginx.conf</span><br><span class="line">│   ├── nginx.conf.default</span><br><span class="line">│   ├── scgi_params</span><br><span class="line">│   ├── scgi_params.default</span><br><span class="line">│   ├── uwsgi_params</span><br><span class="line">│   ├── uwsgi_params.default</span><br><span class="line">│   └── win-utf</span><br><span class="line">├── html</span><br><span class="line">│   ├── 50x.html</span><br><span class="line">│   └── index.html</span><br><span class="line">├── nginxlog</span><br><span class="line">├── pids</span><br><span class="line">└── sbin</span><br><span class="line">    └── nginx</span><br></pre></td></tr></table></figure>
<p>完善Nginx目录结构</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -pv /usr/<span class="built_in">local</span>/nginx/tmp/&#123;client,proxy,fastcgi,uwsgi,scgi&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Nginx启动和监听"><a href="#Nginx启动和监听" class="headerlink" title="Nginx启动和监听"></a>Nginx启动和监听</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">/usr/<span class="built_in">local</span>/nginx/sbin/nginx</span><br><span class="line"><span class="comment"># 检查是否启动</span></span><br><span class="line">ss -tnlp | grep :80</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Liunx</tag>
        <tag>CentOS</tag>
        <tag>Nginx</tag>
        <tag>Server</tag>
      </tags>
  </entry>
  <entry>
    <title>关于QuickProfile中存在的风险异常分析</title>
    <url>/2020/07/01/QuickProfile-%20Anomaly-analysis/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">查看内容,请输入密码</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="7506cdb68ef40e3b8bde66558b2b1d27508c2bdcba501e880a6f7701d7377a07">5a9d859d84bffc595a5dc39839d0abec3566fd585b6a38a804dc7c35a5153fab63bbb03905a835e023b7afd8d2b9fe225e445421a82b894b11a35036eb237fdc558e756360cc899a68356fe150e4506b3f20fb8738883d1d40c713bdfa4c47a2b2ebcd72306812814541c837058583c4b1c556b2e025b6bcce345f700a94a6bdc4248c757dff85f154ef960af0cb2a828ae782902d669b46ab7fb6883d27c80056eca45c5fabc870ac4a3a0efd08b330053d54c1331647f48352565023c63eb7</script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>系统调优</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>系统调优</tag>
      </tags>
  </entry>
</search>
