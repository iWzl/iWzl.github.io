[{"title":"容器技术实现基础和原理","uid":"fe1f8fc0d1387355bca72fa308af9e3c","slug":"容器化应用/容器技术实现基础和原理","date":"2021-03-31T01:49:48.000Z","updated":"2021-06-21T13:56:38.818Z","comments":true,"path":"api/articles/容器化应用/容器技术实现基础和原理.json","cover":"http://img.upuphub.com/t6Whmk.jpg","text":"容器是 Paas（ Platform-as-a-Service，平台即服务）的一种体现。将所需软件整合成一个应用，一个服务。 通俗的讲：容器是一种沙盒技术。把应用整体封装起来，应用与应用之间，在各自的边界内运行，不会相互干扰；并且封装起来的应用能够很容易的完成打包和分发。 实现原...","link":"","photos":[],"count_time":{"symbolsCount":223,"symbolsTime":"1 mins."},"categories":[{"name":"k8s","slug":"k8s","count":1,"path":"api/categories/k8s.json"}],"tags":[{"name":"docker","slug":"docker","count":1,"path":"api/tags/docker.json"},{"name":"容器","slug":"容器","count":1,"path":"api/tags/容器.json"},{"name":"liunx","slug":"liunx","count":1,"path":"api/tags/liunx.json"}],"author":{"name":"王小妖","slug":"blog-author","avatar":"http://img.upuphub.com/jW5tou.jpg","link":"/","description":"【啾啾】: 小妖养的小猫猫 </br> 【Lily】: 小妖的大哥</br>【小妖】: 搞后端的技术菜鸟 </br></br>做点记录,省的以后忘了","socials":{"github":"https://github.com/iWzl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"HTTP3协议的深入剖析","uid":"58cd1de81cc6a83719721cae20d0ce2c","slug":"网络协议/应用层协议/HTTP3协议的深入剖析","date":"2021-03-24T03:55:05.000Z","updated":"2021-06-21T14:00:18.510Z","comments":true,"path":"api/articles/网络协议/应用层协议/HTTP3协议的深入剖析.json","cover":"http://img.upuphub.com/CH1K51.jpg","text":"HTTP3协议的深入剖析自2017年起HTTP3协议已发布了34个Draft，推出在即，Chrome、Nginx等软件都在跟进实现最新的草案。本文将介绍HTTP3协议规范、应用场景及实现原理。 2015年HTTP2协议正式推出后，已经有接近一半的互联网站点在使用它： HTTP2协...","link":"","photos":[],"count_time":{"symbolsCount":"7.4k","symbolsTime":"7 mins."},"categories":[{"name":"网络协议","slug":"网络协议","count":1,"path":"api/categories/网络协议.json"}],"tags":[{"name":"网络协议","slug":"网络协议","count":1,"path":"api/tags/网络协议.json"},{"name":"HTTP协议","slug":"HTTP协议","count":1,"path":"api/tags/HTTP协议.json"},{"name":"应用层","slug":"应用层","count":1,"path":"api/tags/应用层.json"}],"author":{"name":"王小妖","slug":"blog-author","avatar":"http://img.upuphub.com/jW5tou.jpg","link":"/","description":"【啾啾】: 小妖养的小猫猫 </br> 【Lily】: 小妖的大哥</br>【小妖】: 搞后端的技术菜鸟 </br></br>做点记录,省的以后忘了","socials":{"github":"https://github.com/iWzl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"支持亿级消息的IM系统模块设计","uid":"620c4776a0cfecee5672c023c9db244a","slug":"及时通讯/支持亿级用户的IM系统模块设计","date":"2021-03-23T02:04:23.000Z","updated":"2021-06-21T14:57:44.312Z","comments":true,"path":"api/articles/及时通讯/支持亿级用户的IM系统模块设计.json","cover":"http://img.upuphub.com/m68Bca.jpg","text":"支持亿级用户的IM系统模块设计现代实现的及时通讯系统一般由长连接和短连接配合使用进行实现，一般的实现架构即Connector和Service两个部分,分别对应长连接服务和短连接服务，长连接服务主要用于服务端对客户端的推送和新消息到达的通知，短连接服务主要用于客户端对于消息的拉取和...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"及时通讯","slug":"及时通讯","count":2,"path":"api/categories/及时通讯.json"}],"tags":[{"name":"及时通讯","slug":"及时通讯","count":2,"path":"api/tags/及时通讯.json"},{"name":"系统架构","slug":"系统架构","count":2,"path":"api/tags/系统架构.json"}],"author":{"name":"王小妖","slug":"blog-author","avatar":"http://img.upuphub.com/jW5tou.jpg","link":"/","description":"【啾啾】: 小妖养的小猫猫 </br> 【Lily】: 小妖的大哥</br>【小妖】: 搞后端的技术菜鸟 </br></br>做点记录,省的以后忘了","socials":{"github":"https://github.com/iWzl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}]