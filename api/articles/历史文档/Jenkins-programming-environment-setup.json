{"title":"Jenkins在CentOS系统环境上的搭建和部署","uid":"d416ce8c5d3763a84244c13dd056ecab","slug":"历史文档/Jenkins-programming-environment-setup","date":"2020-07-23T13:32:40.000Z","updated":"2021-06-22T04:53:39.614Z","comments":true,"path":"api/articles/历史文档/Jenkins-programming-environment-setup.json","keywords":null,"cover":"https://img.upuphub.com/txrp15.jpg","content":"<h3 id=\"Jenkins服务在CentOS系统环境上的搭建和部署\"><a href=\"#Jenkins服务在CentOS系统环境上的搭建和部署\" class=\"headerlink\" title=\"Jenkins服务在CentOS系统环境上的搭建和部署\"></a>Jenkins服务在CentOS系统环境上的搭建和部署</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://www.jenkins.io/zh/\">Jenkins</a> 由Java编写的一个开源的、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的），主要用于持续、自动的构建/测试软件项目、监控外部任务的运行（这个比较抽象，暂且写上，不做解释）。Jenkins用Java语言编写，可在Tomcat等流行的servlet容器中运行，也可独立运行。通常与版本管理工具(SCM)、构建工具结合使用。常用的版本控制工具有SVN、GIT，构建工具有Maven、Ant、Gradle。</p></blockquote>\n<span id=\"more\"></span>  \n\n<p>CI(Continuous integration，中文意思是持续集成)是一种软件开发时间。持续集成强调开发人员提交了新代码之后，立刻进行构建、（单元）测试。根据测试结果，我们可以确定新代码和原有代码能否正确地集成在一起。借用网络图片对CI加以理解。</p>\n<p><img src=\"http://img.upuphub.com/6464255-1b6e3bfdbece1492.jpg\" alt=\"CI\"></p>\n<p> CD(Continuous Delivery， 中文意思持续交付)是在持续集成的基础上，将集成后的代码部署到更贴近真实运行环境(类生产环境)中。比如，我们完成单元测试后，可以把代码部署到连接数据库的Staging环境中更多的测试。如果代码没有问题，可以继续手动部署到生产环境。下图反应的是CI/CD 的大概工作模式。</p>\n<p><img src=\"http://img.upuphub.com/6464255-ba088ec7257062c0.jpg\" alt=\"Jenkins\"></p>\n<!-- more -->\n\n<h2 id=\"在线安装Jenkins\"><a href=\"#在线安装Jenkins\" class=\"headerlink\" title=\"在线安装Jenkins\"></a>在线安装Jenkins</h2><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># 获取 repo\n$ wget -O &#x2F;etc&#x2F;yum.repos.d&#x2F;jenkins.repo https:&#x2F;&#x2F;pkg.jenkins.io&#x2F;redhat-stable&#x2F;jenkins.repo\n\n# 获取key, 如果之前导入 jenkins 的key, 这一步可以忽略\n$ rpm --import https:&#x2F;&#x2F;pkg.jenkins.io&#x2F;redhat-stable&#x2F;jenkins.io.key\n\n$ yum update &amp;&amp; yum install jenkins\n\n# 启用 jenkins\n$ systemctl start jenkins<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"离线安装Jenkins\"><a href=\"#离线安装Jenkins\" class=\"headerlink\" title=\"离线安装Jenkins\"></a>离线安装Jenkins</h2><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># 准备安装临时文件夹\n$ mkdir jenkins\n$ cd jenkins\n\n# 获取最新的稳定版本的Jenkins.rpm文件(https:&#x2F;&#x2F;pkg.jenkins.io&#x2F;redhat-stable&#x2F;)\n$ wget https:&#x2F;&#x2F;pkg.jenkins.io&#x2F;redhat-stable&#x2F;jenkins-2.235.2-1.1.noarch.rpm\n\n# 执行本地的Yum安装\n$ yum localinstall jenkins-2.235.2-1.1.noarch.rpm\n\n# 启用 jenkins\n$ systemctl start jenkins<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"安装异常解决\"><a href=\"#安装异常解决\" class=\"headerlink\" title=\"安装异常解决\"></a>安装异常解决</h2><h3 id=\"异常信息如下\"><a href=\"#异常信息如下\" class=\"headerlink\" title=\"异常信息如下\"></a>异常信息如下</h3><pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@Leonardo-iWzl-Server jenkins]# systemctl start jenkins\nJob for jenkins.service failed because the control process exited with error code. See &quot;systemctl status jenkins.service&quot; and &quot;journalctl -xe&quot; for details.\n[root@Leonardo-iWzl-Server jenkins]# systemctl status jenkins\n● jenkins.service - LSB: Jenkins Automation Server\n   Loaded: loaded (&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;jenkins; bad; vendor preset: disabled)\n   Active: failed (Result: exit-code) since 四 2020-07-23 10:02:43 EDT; 16s ago\n     Docs: man:systemd-sysv-generator(8)\n  Process: 23582 ExecStart&#x3D;&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;jenkins start (code&#x3D;exited, status&#x3D;1&#x2F;FAILURE)\n\n7月 23 10:02:43 Leonardo-iWzl-Server systemd[1]: Starting LSB: Jenkins Automation Server...\n7月 23 10:02:43 Leonardo-iWzl-Server runuser[23587]: pam_unix(runuser:session): session opened for user jenkins...d&#x3D;0)\n7月 23 10:02:43 Leonardo-iWzl-Server jenkins[23582]: Starting Jenkins bash: &#x2F;usr&#x2F;bin&#x2F;java: No such file or directory\n7月 23 10:02:43 Leonardo-iWzl-Server runuser[23587]: pam_unix(runuser:session): session closed for user jenkins\n7月 23 10:02:43 Leonardo-iWzl-Server jenkins[23582]: [FAILED]\n7月 23 10:02:43 Leonardo-iWzl-Server systemd[1]: jenkins.service: control process exited, code&#x3D;exited status&#x3D;1\n7月 23 10:02:43 Leonardo-iWzl-Server systemd[1]: Failed to start LSB: Jenkins Automation Server.\n7月 23 10:02:43 Leonardo-iWzl-Server systemd[1]: Unit jenkins.service entered failed state.\n7月 23 10:02:43 Leonardo-iWzl-Server systemd[1]: jenkins.service failed.\nHint: Some lines were ellipsized, use -l to show in full.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"原因说明\"><a href=\"#原因说明\" class=\"headerlink\" title=\"原因说明\"></a>原因说明</h3><p>Jenkins 默认会在以下目录按顺序搜寻 JDK，一旦找到一个可用的即返回</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">&#x2F;etc&#x2F;alternatives&#x2F;java\n&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-1.8.0&#x2F;bin&#x2F;java\n&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jre-1.8.0&#x2F;bin&#x2F;java\n&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-1.7.0&#x2F;bin&#x2F;java\n&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jre-1.7.0&#x2F;bin&#x2F;java\n&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-11.0&#x2F;bin&#x2F;java\n&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jre-11.0&#x2F;bin&#x2F;java\n&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;java-11-openjdk-amd64\n&#x2F;usr&#x2F;bin&#x2F;java<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>如果系统的以上位置都未安装 JDK，启动时就会报错，可以通过建立软连接进行解决</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">ln -s &#x2F;usr&#x2F;local&#x2F;java&#x2F;jdk1.8.0_261&#x2F;bin&#x2F;java &#x2F;usr&#x2F;bin&#x2F;java<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>完成以上错误处理后,可得到以下输出</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@Leonardo-iWzl-Server jenkins]# systemctl status jenkins\n● jenkins.service - LSB: Jenkins Automation Server\n   Loaded: loaded (&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;jenkins; bad; vendor preset: disabled)\n   Active: active (running) since 四 2020-07-23 10:10:06 EDT; 4s ago\n     Docs: man:systemd-sysv-generator(8)\n  Process: 23606 ExecStart&#x3D;&#x2F;etc&#x2F;rc.d&#x2F;init.d&#x2F;jenkins start (code&#x3D;exited, status&#x3D;0&#x2F;SUCCESS)\n   CGroup: &#x2F;system.slice&#x2F;jenkins.service\n           └─23630 &#x2F;usr&#x2F;bin&#x2F;java -Dcom.sun.akuma.Daemon&#x3D;daemonized -Djava.awt.headless&#x3D;true -DJENKINS_HOME&#x3D;&#x2F;var&#x2F;lib&#x2F;jenkins -jar &#x2F;usr&#x2F;lib&#x2F;jenkins&#x2F;jenkins.war --logfile&#x3D;&#x2F;var&#x2F;log&#x2F;jenkins&#x2F;jenkins.log --webroot&#x3D;&#x2F;var&#x2F;cache&#x2F;jenkins&#x2F;war --dae...\n\n7月 23 10:10:04 Leonardo-iWzl-Server systemd[1]: Starting LSB: Jenkins Automation Server...\n7月 23 10:10:04 Leonardo-iWzl-Server runuser[23611]: pam_unix(runuser:session): session opened for user jenkins by (uid&#x3D;0)\n7月 23 10:10:06 Leonardo-iWzl-Server runuser[23611]: pam_unix(runuser:session): session closed for user jenkins\n7月 23 10:10:06 Leonardo-iWzl-Server jenkins[23606]: Starting Jenkins [  OK  ]\n7月 23 10:10:06 Leonardo-iWzl-Server systemd[1]: Started LSB: Jenkins Automation Server.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p> 查看jenkins 的启动参数 <em>ps -ef |grep jenkins</em> </p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">[root@Leonardo-iWzl-Server jenkins]# ps -ef |grep jenkins\njenkins  23630     1 49 10:10 ?        00:00:54 &#x2F;usr&#x2F;bin&#x2F;java \n\t\t-Dcom.sun.akuma.Daemon&#x3D;daemonized \n\t\t-Djava.awt.headless&#x3D;true \n\t\t-DJENKINS_HOME&#x3D;&#x2F;var&#x2F;lib&#x2F;jenkins \n\t\t-jar &#x2F;usr&#x2F;lib&#x2F;jenkins&#x2F;jenkins.war \n\t\t--logfile&#x3D;&#x2F;var&#x2F;log&#x2F;jenkins&#x2F;jenkins.log \n\t\t--webroot&#x3D;&#x2F;var&#x2F;cache&#x2F;jenkins&#x2F;war \n\t\t--daemon \n\t\t--httpPort&#x3D;8080 \n\t\t--debug&#x3D;5 \n\t\t--handlerCountMax&#x3D;100 \n\t\t--handlerCountMaxIdle&#x3D;20\nroot     23695 23312  0 10:11 pts&#x2F;0    00:00:00 grep --color&#x3D;auto jenkins<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>在这里看到日志的一些配置和相关的端口、可以通过访问<em>「IP」:8080</em>访问到Jenkins服务</p>\n<h3 id=\"Jenkins的更新\"><a href=\"#Jenkins的更新\" class=\"headerlink\" title=\"Jenkins的更新\"></a>Jenkins的更新</h3><p>对于Jenkins更新可以通过</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">yum update jenkins<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>完成更新后,需要重启Jenkins服务</p>\n<h3 id=\"Jenkins国内镜像配置\"><a href=\"#Jenkins国内镜像配置\" class=\"headerlink\" title=\"Jenkins国内镜像配置\"></a>Jenkins国内镜像配置</h3><p>修改*/var/lib/jenkins* 目录下的<em>hudson.model.UpdateCenter.xml</em>文件内容如下</p>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version='1.1' encoding='UTF-8'?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>sites</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>site</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>default<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- &lt;url>https://updates.jenkins.io/update-center.json&lt;/url>--></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>url</span><span class=\"token punctuation\">></span></span>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/update-center.json/url>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>site</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>sites</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>修改默认配置json文件*/var/lib/jenkins/updates/default.json*</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\"># 进入响应文件夹\ncd &#x2F;var&#x2F;lib&#x2F;jenkins&#x2F;updates\n\n# 备份原始文件\ncp default.json default.json.bak\n\n# 替换更新下载地址\nsed -i &#39;s&#x2F;http:\\&#x2F;\\&#x2F;updates.jenkins-ci.org\\&#x2F;download&#x2F;https:\\&#x2F;\\&#x2F;mirrors.tuna.tsinghua.edu.cn\\&#x2F;jenkins&#x2F;g&#39; default.json\n\n# 替换测试URL\nsed -i &#39;s&#x2F;http:\\&#x2F;\\&#x2F;www.google.com&#x2F;https:\\&#x2F;\\&#x2F;www.baidu.com&#x2F;g&#39; default.json<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>完成以后重启Jenkins服务</p>\n<h3 id=\"配置Jenkins服务\"><a href=\"#配置Jenkins服务\" class=\"headerlink\" title=\"配置Jenkins服务\"></a>配置Jenkins服务</h3><p>之后按提示和Jenkins可视化引导完成剩余的Jenkins环境的搭建部署</p>\n<h2 id=\"Jenkins的结构导图\"><a href=\"#Jenkins的结构导图\" class=\"headerlink\" title=\"Jenkins的结构导图\"></a>Jenkins的结构导图</h2><p><img src=\"http://img.upuphub.com/6464255-cc56d3af1fdd96df.png\" alt=\"Jenkins\"></p>\n<hr>\n<h2 id=\"参考和引用\"><a href=\"#参考和引用\" class=\"headerlink\" title=\"参考和引用\"></a>参考和引用</h2><p><a href=\"https://www.jianshu.com/p/5f671aca2b5a\">哥本哈根月光-Jenkins详细教程</a></p>\n<p><a href=\"https://halo.sherlocky.com/archives/jenkins\">CentOS 安装 Jenkins 及 国内下载加速</a></p>\n","text":"Jenkins服务在CentOS系统环境上的搭建和部署 Jenkins 由Java编写的一个开源的、提供友好操作界面的持续集成(CI)工具，起源于Hudson（Hudson是商用的），主要用于持续、自动的构建/测试软件项目、监控外部任务的运行（这个比较抽象，暂且写上，不做解释）。...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"DevOps","slug":"DevOps","count":1,"path":"api/categories/DevOps.json"}],"tags":[{"name":"DevOps","slug":"DevOps","count":1,"path":"api/tags/DevOps.json"},{"name":"Liunx","slug":"Liunx","count":3,"path":"api/tags/Liunx.json"},{"name":"Jenkins","slug":"Jenkins","count":1,"path":"api/tags/Jenkins.json"},{"name":"CentOS","slug":"CentOS","count":2,"path":"api/tags/CentOS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Jenkins%E6%9C%8D%E5%8A%A1%E5%9C%A8CentOS%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E4%B8%8A%E7%9A%84%E6%90%AD%E5%BB%BA%E5%92%8C%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">Jenkins服务在CentOS系统环境上的搭建和部署</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E7%BA%BF%E5%AE%89%E8%A3%85Jenkins\"><span class=\"toc-text\">在线安装Jenkins</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85Jenkins\"><span class=\"toc-text\">离线安装Jenkins</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E5%BC%82%E5%B8%B8%E8%A7%A3%E5%86%B3\"><span class=\"toc-text\">安装异常解决</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BC%82%E5%B8%B8%E4%BF%A1%E6%81%AF%E5%A6%82%E4%B8%8B\"><span class=\"toc-text\">异常信息如下</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E5%9B%A0%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">原因说明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Jenkins%E7%9A%84%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">Jenkins的更新</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Jenkins%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">Jenkins国内镜像配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AEJenkins%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">配置Jenkins服务</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Jenkins%E7%9A%84%E7%BB%93%E6%9E%84%E5%AF%BC%E5%9B%BE\"><span class=\"toc-text\">Jenkins的结构导图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E5%92%8C%E5%BC%95%E7%94%A8\"><span class=\"toc-text\">参考和引用</span></a>","author":{"name":"王小妖","slug":"blog-author","avatar":"http://img.upuphub.com/jW5tou.jpg","link":"/","description":"【啾啾】: 小妖养的小猫猫 </br> 【Lily】: 小妖的大哥</br>【小妖】: 搞后端的技术菜鸟 </br></br>做点记录,省的以后忘了","socials":{"github":"https://github.com/iWzl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Liuns系统高效文件处理三剑客-Grep/Awk/Sed","uid":"2ee77e34c0e7f66f6f5d9526faba3817","slug":"历史文档/Liunx-Tips-001-Grep-Awk-Sed","date":"2020-08-14T03:45:29.000Z","updated":"2021-06-22T04:53:45.210Z","comments":true,"path":"api/articles/历史文档/Liunx-Tips-001-Grep-Awk-Sed.json","keywords":null,"cover":"https://img.upuphub.com/k0jXtK.jpg","text":" 子曰：“工欲善其事，必先利其器。居是邦也，事其大夫之贤者，友其士之仁者。” –论语·卫灵公 GrepGrep(global search regular expression(RE) and print out the line)是一款强大的文本搜索工具，支持正则表达式。来自U...","link":"","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[{"name":"Tips","slug":"Tips","count":1,"path":"api/categories/Tips.json"}],"tags":[{"name":"Liunx","slug":"Liunx","count":3,"path":"api/tags/Liunx.json"},{"name":"Tools","slug":"Tools","count":1,"path":"api/tags/Tools.json"},{"name":"Shell","slug":"Shell","count":1,"path":"api/tags/Shell.json"}],"author":{"name":"王小妖","slug":"blog-author","avatar":"http://img.upuphub.com/jW5tou.jpg","link":"/","description":"【啾啾】: 小妖养的小猫猫 </br> 【Lily】: 小妖的大哥</br>【小妖】: 搞后端的技术菜鸟 </br></br>做点记录,省的以后忘了","socials":{"github":"https://github.com/iWzl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Java Microbenchmark Harness微基准测试陷阱","uid":"27e755dac1a34d29a85efca0aec49e82","slug":"历史文档/Java-Microbenchmark-Harness-Test-Trap","date":"2020-07-09T14:15:59.000Z","updated":"2021-06-22T04:53:27.338Z","comments":true,"path":"api/articles/历史文档/Java-Microbenchmark-Harness-Test-Trap.json","keywords":null,"cover":"https://img.upuphub.com/wjBqVY.jpg","text":" 天下之事，闻者不如见者知之为详，见者不如居者知之为尽。——宋-陆游 你要知道梨子的滋味，就要亲口尝一下。——毛泽东 俗话说，没有实践就没有发言权，自己实践才能知之为尽，Benchmark 为应用提供了数据支持，是评价和比较方法好坏的基准，Benchmark 的准确性，多样性便显...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"系统调优","slug":"系统调优","count":2,"path":"api/categories/系统调优.json"}],"tags":[{"name":"Java","slug":"Java","count":2,"path":"api/tags/Java.json"},{"name":"基准测试","slug":"基准测试","count":2,"path":"api/tags/基准测试.json"},{"name":"系统调优","slug":"系统调优","count":2,"path":"api/tags/系统调优.json"},{"name":"误区和陷阱","slug":"误区和陷阱","count":1,"path":"api/tags/误区和陷阱.json"},{"name":"JMH","slug":"JMH","count":2,"path":"api/tags/JMH.json"}],"author":{"name":"王小妖","slug":"blog-author","avatar":"http://img.upuphub.com/jW5tou.jpg","link":"/","description":"【啾啾】: 小妖养的小猫猫 </br> 【Lily】: 小妖的大哥</br>【小妖】: 搞后端的技术菜鸟 </br></br>做点记录,省的以后忘了","socials":{"github":"https://github.com/iWzl","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}